import{_ as s,o as a,c as n,Q as e}from"./chunks/framework.ed6abfc6.js";const u=JSON.parse('{"title":"Function: isEmpty","description":"","frontmatter":{},"headers":[],"relativePath":"api/pipe_strict/functions/function.isEmpty.md","filePath":"api/pipe_strict/functions/function.isEmpty.md","lastUpdated":null}'),p={name:"api/pipe_strict/functions/function.isEmpty.md"},l=e(`<h1 id="function-isempty" tabindex="-1">Function: isEmpty <a class="header-anchor" href="#function-isempty" aria-label="Permalink to &quot;Function: isEmpty&quot;">​</a></h1><blockquote><p><strong>isEmpty</strong>&lt;<code>A</code>&gt;(<code>args</code>): <code>boolean</code></p></blockquote><p>Check whether <code>args</code> is empty.</p><h2 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th></tr></thead><tbody><tr><td style="text-align:left;"><code>A</code></td></tr></tbody></table><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>args</code></td><td style="text-align:left;"><code>A</code></td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>boolean</code></p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">isEmpty</span><span style="color:#E1E4E8;">({}) </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#B392F0;">isEmpty</span><span style="color:#E1E4E8;">([]) </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#B392F0;">isEmpty</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#B392F0;">isEmpty</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#B392F0;">isEmpty</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">isEmpty</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#B392F0;">isEmpty</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#B392F0;">isEmpty</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(){}) </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#B392F0;">isEmpty</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">Symbol</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">)) </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#B392F0;">isEmpty</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Date</span><span style="color:#E1E4E8;">()) </span><span style="color:#6A737D;">// false</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">isEmpty</span><span style="color:#24292E;">({}) </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#6F42C1;">isEmpty</span><span style="color:#24292E;">([]) </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#6F42C1;">isEmpty</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#6F42C1;">isEmpty</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">undefined</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#6F42C1;">isEmpty</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">isEmpty</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#6F42C1;">isEmpty</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">false</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#6F42C1;">isEmpty</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(){}) </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#6F42C1;">isEmpty</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">Symbol</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">)) </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#6F42C1;">isEmpty</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Date</span><span style="color:#24292E;">()) </span><span style="color:#6A737D;">// false</span></span></code></pre></div><p><a href="https://github.com/niuiic/fx-flow/blob/main/packages/test/src/pipe/strict/isEmpty.spec.ts" target="_blank" rel="noreferrer">More examples</a></p><h2 id="defined-in" tabindex="-1">Defined In <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined In&quot;">​</a></h2><p><a href="https://github.com/niuiic/fx-flow/blob/d099be6/packages/core/src/pipe/strict/isEmpty.ts#L24" target="_blank" rel="noreferrer">packages/core/src/pipe/strict/isEmpty.ts:24</a></p>`,14),t=[l];function o(r,c,i,y,E,d){return a(),n("div",null,t)}const h=s(p,[["render",o]]);export{u as __pageData,h as default};
