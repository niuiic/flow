import{_ as e,o as t,c as a,O as r}from"./chunks/framework.7fc6a857.js";const h=JSON.parse('{"title":"IterableReturnValue<T, R>","description":"","frontmatter":{},"headers":[],"relativePath":"api/module.internal_/type-aliases/type-alias.IterableReturnValue.md","filePath":"api/module.internal_/type-aliases/type-alias.IterableReturnValue.md"}'),l={name:"api/module.internal_/type-aliases/type-alias.IterableReturnValue.md"},o=r('<h1 id="iterablereturnvalue-t-r" tabindex="-1">IterableReturnValue<code>&lt;T, R&gt;</code> <a class="header-anchor" href="#iterablereturnvalue-t-r" aria-label="Permalink to &quot;IterableReturnValue`&lt;T, R&gt;`&quot;">​</a></h1><p><strong><code>Type alias</code></strong></p><blockquote><p><strong>IterableReturnValue</strong>: &lt;<code>T</code>, <code>R</code>&gt; <code>T</code> <em>extends</em> <a href="./../interfaces/interface.AsyncIterable.html"><code>AsyncIterable</code></a>&lt;<code>unknown</code>&gt; ? <a href="./type-alias.FixedPromise.html"><code>FixedPromise</code></a>&lt;<code>R</code>&gt; : <code>T</code> <em>extends</em> <a href="./../interfaces/interface.Iterable.html"><code>Iterable</code></a>&lt;<code>unknown</code>&gt; ? <code>R</code> : <code>never</code></p></blockquote><p>T is AsyncIterable ? FixedPromise&lt;R&gt; : R</p><p><strong>Source:</strong> <a href="https://github.com/niuiic/flow/blob/aaac7dc/src/types/iterable.ts#L17" target="_blank" rel="noreferrer">src/types/iterable.ts:17</a></p><h2 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Default</th></tr></thead><tbody><tr><td style="text-align:left;">T <em>extends</em> <a href="./type-alias.UniversalIterable.html"><code>UniversalIterable</code></a>&lt;<code>unknown</code>&gt;</td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;">R</td><td style="text-align:left;"><a href="./type-alias.UniversalIterableItem.html"><code>UniversalIterableItem</code></a>&lt;<code>T</code>&gt;</td></tr></tbody></table>',7),n=[o];function s(d,c,i,p,u,m){return t(),a("div",null,n)}const _=e(l,[["render",s]]);export{h as __pageData,_ as default};
