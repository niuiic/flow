import{_ as e,c as a,o as l,a3 as t}from"./chunks/framework.B_D3VkG0.js";const I=JSON.parse('{"title":"types","description":"","frontmatter":{},"headers":[],"relativePath":"api/types/index.md","filePath":"api/types/index.md","lastUpdated":null}'),i={name:"api/types/index.md"},s=t('<p><a href="./../modules.html">fx-flow v0.7.0</a> / types</p><h1 id="types" tabindex="-1">types <a class="header-anchor" href="#types" aria-label="Permalink to &quot;types&quot;">​</a></h1><h2 id="index" tabindex="-1">Index <a class="header-anchor" href="#index" aria-label="Permalink to &quot;Index&quot;">​</a></h2><h3 id="interfaces" tabindex="-1">Interfaces <a class="header-anchor" href="#interfaces" aria-label="Permalink to &quot;Interfaces&quot;">​</a></h3><ul><li><a href="./interfaces/AsyncIterableIterator.html">AsyncIterableIterator</a></li><li><a href="./interfaces/FlowState.html">FlowState</a></li><li><a href="./interfaces/IterableIterator.html">IterableIterator</a></li><li><a href="./interfaces/IterationMap.html">IterationMap</a></li></ul><h3 id="type-aliases" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases" aria-label="Permalink to &quot;Type Aliases&quot;">​</a></h3><ul><li><a href="./type-aliases/AnyFunction.html">AnyFunction</a></li><li><a href="./type-aliases/AnyObject.html">AnyObject</a></li><li><a href="./type-aliases/Append.html">Append</a></li><li><a href="./type-aliases/ArrayReturnValue.html">ArrayReturnValue</a></li><li><a href="./type-aliases/AsyncFunction.html">AsyncFunction</a></li><li><a href="./type-aliases/AsyncIterableItem.html">AsyncIterableItem</a></li><li><a href="./type-aliases/Cast.html">Cast</a></li><li><a href="./type-aliases/ConcatReturnValue.html">ConcatReturnValue</a></li><li><a href="./type-aliases/DeepFlat.html">DeepFlat</a></li><li><a href="./type-aliases/DeepFlatSync.html">DeepFlatSync</a></li><li><a href="./type-aliases/EmptyObject.html">EmptyObject</a></li><li><a href="./type-aliases/Entries.html">Entries</a></li><li><a href="./type-aliases/Expand.html">Expand</a></li><li><a href="./type-aliases/FixedPromise.html">FixedPromise</a></li><li><a href="./type-aliases/FlatReturnValue.html">FlatReturnValue</a></li><li><a href="./type-aliases/FlowReturnValue.html">FlowReturnValue</a></li><li><a href="./type-aliases/FnReturnValue.html">FnReturnValue</a></li><li><a href="./type-aliases/Head.html">Head</a></li><li><a href="./type-aliases/Immutable.html">Immutable</a></li><li><a href="./type-aliases/ImmutableArray.html">ImmutableArray</a></li><li><a href="./type-aliases/ImmutableMap.html">ImmutableMap</a></li><li><a href="./type-aliases/ImmutableObject.html">ImmutableObject</a></li><li><a href="./type-aliases/ImmutableSet.html">ImmutableSet</a></li><li><a href="./type-aliases/ImmutableTuple.html">ImmutableTuple</a></li><li><a href="./type-aliases/Include.html">Include</a></li><li><a href="./type-aliases/IsAny.html">IsAny</a></li><li><a href="./type-aliases/IsNever.html">IsNever</a></li><li><a href="./type-aliases/IsTuple.html">IsTuple</a></li><li><a href="./type-aliases/IsUnion.html">IsUnion</a></li><li><a href="./type-aliases/Item.html">Item</a></li><li><a href="./type-aliases/Iter.html">Iter</a></li><li><a href="./type-aliases/IterableItem.html">IterableItem</a></li><li><a href="./type-aliases/IterableReturnValue.html">IterableReturnValue</a></li><li><a href="./type-aliases/Iteration.html">Iteration</a></li><li><a href="./type-aliases/IterationOf.html">IterationOf</a></li><li><a href="./type-aliases/IteratorResolve.html">IteratorResolve</a></li><li><a href="./type-aliases/IteratorReturnValue.html">IteratorReturnValue</a></li><li><a href="./type-aliases/Length.html">Length</a></li><li><a href="./type-aliases/MaybePromise.html">MaybePromise</a></li><li><a href="./type-aliases/Modifier.html">Modifier</a></li><li><a href="./type-aliases/Next.html">Next</a></li><li><a href="./type-aliases/Partial.html">Partial</a></li><li><a href="./type-aliases/PipeReturnValue.html">PipeReturnValue</a></li><li><a href="./type-aliases/Pos.html">Pos</a></li><li><a href="./type-aliases/Prepend.html">Prepend</a></li><li><a href="./type-aliases/Prev.html">Prev</a></li><li><a href="./type-aliases/Primitive.html">Primitive</a></li><li><a href="./type-aliases/Record.html">Record</a></li><li><a href="./type-aliases/Reject.html">Reject</a></li><li><a href="./type-aliases/ResultReturnValue.html">ResultReturnValue</a></li><li><a href="./type-aliases/SingleArgFunction.html">SingleArgFunction</a></li><li><a href="./type-aliases/Sub.html">Sub</a></li><li><a href="./type-aliases/SubNegative.html">SubNegative</a></li><li><a href="./type-aliases/SubPositive.html">SubPositive</a></li><li><a href="./type-aliases/Tail.html">Tail</a></li><li><a href="./type-aliases/UniversalIterable.html">UniversalIterable</a></li><li><a href="./type-aliases/UniversalIterableItem.html">UniversalIterableItem</a></li><li><a href="./type-aliases/UniversalIterator.html">UniversalIterator</a></li><li><a href="./type-aliases/IsNegative.html">_IsNegative</a></li><li><a href="./type-aliases/Sub-1.html">_Sub</a></li><li><a href="./type-aliases/SubNegative-1.html">_SubNegative</a></li><li><a href="./type-aliases/SubPositive-1.html">_SubPositive</a></li></ul>',7),r=[s];function h(n,m,p,y,f,u){return l(),a("div",null,r)}const c=e(i,[["render",h]]);export{I as __pageData,c as default};
