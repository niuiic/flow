import{_ as e,o as t,c as a,O as s}from"./chunks/framework.4afe7240.js";const m=JSON.parse('{"title":"size()","description":"","frontmatter":{},"headers":[],"relativePath":"api/functions/function.size.md","filePath":"api/functions/function.size.md"}'),r={name:"api/functions/function.size.md"},l=s('<h1 id="size" tabindex="-1">size() <a class="header-anchor" href="#size" aria-label="Permalink to &quot;size()&quot;">​</a></h1><p><strong><code>Function</code></strong></p><blockquote><p><strong>size</strong>&lt;A&gt;(iterable: <code>A</code>): <a href="./../module.internal_/type-aliases/type-alias.IterableReturnValue.html"><code>IterableReturnValue</code></a>&lt;<code>A</code>, <code>number</code>&gt;</p></blockquote><p>Returns size of iterable/asyncIterable</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">size</span><span style="color:#A6ACCD;">([</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">])) </span><span style="color:#676E95;font-style:italic;">// 3</span></span></code></pre></div><p><a href="https://github.com/niuiic/flow/blob/main/tests/functions/strict/size.spec.ts" target="_blank" rel="noreferrer">More examples</a></p><p><strong>Source:</strong> <a href="https://github.com/niuiic/flow/blob/8427ebb/src/functions/strict/size.ts#L27" target="_blank" rel="noreferrer">src/functions/strict/size.ts:27</a></p><h2 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th></tr></thead><tbody><tr><td style="text-align:left;">A <em>extends</em> <a href="./../module.internal_/type-aliases/type-alias.UniversalIterable.html"><code>UniversalIterable</code></a></td></tr></tbody></table><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;">iterable</td><td style="text-align:left;"><code>A</code></td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><a href="./../module.internal_/type-aliases/type-alias.IterableReturnValue.html"><code>IterableReturnValue</code></a>&lt;<code>A</code>, <code>number</code>&gt;</p>',14),o=[l];function n(i,c,p,d,h,u){return t(),a("div",null,o)}const f=e(r,[["render",n]]);export{m as __pageData,f as default};
