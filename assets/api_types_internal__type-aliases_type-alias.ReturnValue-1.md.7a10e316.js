import{_ as e,o as a,c as s,X as t}from"./chunks/framework.6e839c56.js";const h=JSON.parse('{"title":"Type alias: ReturnValue<A, R>","description":"","frontmatter":{},"headers":[],"relativePath":"api/types/internal_/type-aliases/type-alias.ReturnValue-1.md","filePath":"api/types/internal_/type-aliases/type-alias.ReturnValue-1.md","lastUpdated":null}'),l={name:"api/types/internal_/type-aliases/type-alias.ReturnValue-1.md"},o=t(`<h1 id="type-alias-returnvalue-a-r" tabindex="-1">Type alias: ReturnValue<code>&lt;A, R&gt;</code> <a class="header-anchor" href="#type-alias-returnvalue-a-r" aria-label="Permalink to &quot;Type alias: ReturnValue\`&lt;A, R&gt;\`&quot;">​</a></h1><blockquote><p><strong>ReturnValue</strong>: &lt;<code>A</code>, <code>R</code>&gt; <code>R</code> <em>extends</em> <code>Promise</code>&lt; <code>string</code> &gt; ? <a href="./../../type-aliases/type-alias.MaybePromise.html"><code>MaybePromise</code></a>&lt; <a href="./../../../flow/classes/class.Result.html"><code>Result</code></a>&lt; <code>A</code> &gt; &gt; : <a href="./../../../flow/classes/class.Result.html"><code>Result</code></a>&lt; <code>A</code> &gt;</p></blockquote><p>Map error if <code>result</code> is failure.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> queryUserInfo </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">flow</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">ok</span><span style="color:#A6ACCD;">(userId)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">andThen</span><span style="color:#A6ACCD;">(queryUserInfo)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">mapErr</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">err</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">failed to query user info</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  )</span></span></code></pre></div><p><a href="https://github.com/niuiic/flow/blob/main/tests/flow/mapErr.spec.ts" target="_blank" rel="noreferrer">More examples</a></p><h2 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th></tr></thead><tbody><tr><td style="text-align:left;"><code>A</code></td></tr><tr><td style="text-align:left;"><code>R</code> <em>extends</em> <a href="./../../type-aliases/type-alias.MaybePromise.html"><code>MaybePromise</code></a>&lt; <code>string</code> &gt;</td></tr></tbody></table><h2 id="source" tabindex="-1">Source <a class="header-anchor" href="#source" aria-label="Permalink to &quot;Source&quot;">​</a></h2><p><a href="https://github.com/niuiic/flow/blob/aa52889/src/flow/mapErr.ts#L15" target="_blank" rel="noreferrer">src/flow/mapErr.ts:15</a></p>`,10),r=[o];function n(p,c,i,d,y,u){return a(),s("div",null,r)}const m=e(l,[["render",n]]);export{h as __pageData,m as default};
