import{_ as e,o as t,c as a,Q as r}from"./chunks/framework.ed6abfc6.js";const h=JSON.parse('{"title":"Type alias: ReturnType<T>","description":"","frontmatter":{},"headers":[],"relativePath":"api/types/internal_/type-aliases/type-alias.ReturnType.md","filePath":"api/types/internal_/type-aliases/type-alias.ReturnType.md","lastUpdated":null}'),n={name:"api/types/internal_/type-aliases/type-alias.ReturnType.md"},o=r('<h1 id="type-alias-returntype-t" tabindex="-1">Type alias: ReturnType<code>&lt;T&gt;</code> <a class="header-anchor" href="#type-alias-returntype-t" aria-label="Permalink to &quot;Type alias: ReturnType`&lt;T&gt;`&quot;">​</a></h1><blockquote><p><strong>ReturnType</strong>: &lt;<code>T</code>&gt; <code>T</code> <em>extends</em> (...<code>args</code>) =&gt; infer R ? <code>R</code> : <code>any</code></p></blockquote><p>Obtain the return type of a function type</p><h2 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code> <em>extends</em> (...<code>args</code>) =&gt; <code>any</code></td></tr></tbody></table><h2 id="defined-in" tabindex="-1">Defined In <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined In&quot;">​</a></h2><p>node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts:1636</p>',7),s=[o];function p(d,i,l,c,y,_){return t(),a("div",null,s)}const T=e(n,[["render",p]]);export{h as __pageData,T as default};
