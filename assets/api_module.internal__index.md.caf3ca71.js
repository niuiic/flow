import{_ as e,o as a,c as t,O as l}from"./chunks/framework.7fc6a857.js";const c=JSON.parse('{"title":"<internal>","description":"","frontmatter":{},"headers":[],"relativePath":"api/module.internal_/index.md","filePath":"api/module.internal_/index.md"}'),i={name:"api/module.internal_/index.md"},r=l('<h1 id="internal" tabindex="-1">&lt;internal&gt; <a class="header-anchor" href="#internal" aria-label="Permalink to &quot;\\&lt;internal\\&gt;&quot;">​</a></h1><h2 id="index" tabindex="-1">Index <a class="header-anchor" href="#index" aria-label="Permalink to &quot;Index&quot;">​</a></h2><h3 id="interfaces" tabindex="-1">Interfaces <a class="header-anchor" href="#interfaces" aria-label="Permalink to &quot;Interfaces&quot;">​</a></h3><ul><li><a href="./interfaces/interface.AsyncIterable.html">AsyncIterable</a></li><li><a href="./interfaces/interface.AsyncIterableIterator.html">AsyncIterableIterator</a></li><li><a href="./interfaces/interface.AsyncIterator.html">AsyncIterator</a></li><li><a href="./interfaces/interface.Iterable.html">Iterable</a></li><li><a href="./interfaces/interface.IterableIterator.html">IterableIterator</a></li><li><a href="./interfaces/interface.Iterator.html">Iterator</a></li><li><a href="./interfaces/interface.IteratorReturnResult.html">IteratorReturnResult</a></li><li><a href="./interfaces/interface.IteratorYieldResult.html">IteratorYieldResult</a></li><li><a href="./interfaces/interface.PromiseLike.html">PromiseLike</a></li></ul><h3 id="type-aliases" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases" aria-label="Permalink to &quot;Type Aliases&quot;">​</a></h3><ul><li><a href="./type-aliases/type-alias.AddReturnValue.html">AddReturnValue</a></li><li><a href="./type-aliases/type-alias.AnyFunction.html">AnyFunction</a></li><li><a href="./type-aliases/type-alias.Awaited.html">Awaited</a></li><li><a href="./type-aliases/type-alias.FixedPromise.html">FixedPromise</a></li><li><a href="./type-aliases/type-alias.FnReturenValue.html">FnReturenValue</a></li><li><a href="./type-aliases/type-alias.Immutable.html">Immutable</a></li><li><a href="./type-aliases/type-alias.ImmutableArray.html">ImmutableArray</a></li><li><a href="./type-aliases/type-alias.ImmutableMap.html">ImmutableMap</a></li><li><a href="./type-aliases/type-alias.ImmutableObject.html">ImmutableObject</a></li><li><a href="./type-aliases/type-alias.ImmutableSet.html">ImmutableSet</a></li><li><a href="./type-aliases/type-alias.ImmutableTuple.html">ImmutableTuple</a></li><li><a href="./type-aliases/type-alias.IsTuple.html">IsTuple</a></li><li><a href="./type-aliases/type-alias.IterableReturnValue.html">IterableReturnValue</a></li><li><a href="./type-aliases/type-alias.IteratorResult.html">IteratorResult</a></li><li><a href="./type-aliases/type-alias.IteratorReturnValue.html">IteratorReturnValue</a></li><li><a href="./type-aliases/type-alias.MaybePromise.html">MaybePromise</a></li><li><a href="./type-aliases/type-alias.PipeReturnValue.html">PipeReturnValue</a></li><li><a href="./type-aliases/type-alias.PrevRes.html">PrevRes</a></li><li><a href="./type-aliases/type-alias.Primitive.html">Primitive</a></li><li><a href="./type-aliases/type-alias.Tail.html">Tail</a></li><li><a href="./type-aliases/type-alias.UniversalIterable.html">UniversalIterable</a></li><li><a href="./type-aliases/type-alias.UniversalIterableItem.html">UniversalIterableItem</a></li></ul>',6),s=[r];function n(h,m,p,u,f,o){return a(),t("div",null,s)}const I=e(i,[["render",n]]);export{c as __pageData,I as default};
