import{_ as e,o as t,c as a,O as l}from"./chunks/framework.7fc6a857.js";const y=JSON.parse('{"title":"reduce()","description":"","frontmatter":{},"headers":[],"relativePath":"api/functions/function.reduce.md","filePath":"api/functions/function.reduce.md"}'),r={name:"api/functions/function.reduce.md"},o=l('<h1 id="reduce" tabindex="-1">reduce() <a class="header-anchor" href="#reduce" aria-label="Permalink to &quot;reduce()&quot;">​</a></h1><p><strong><code>Function</code></strong></p><blockquote><p><strong>reduce</strong>&lt;A&gt;(fn: <a href="./../module.internal_/type-aliases/type-alias.AnyFunction.html"><code>AnyFunction</code></a>, iterable: <code>A</code>): <code>undefined</code></p></blockquote><p>&#39;reduce&#39; boils down a list of values into a single value.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">reduce</span><span style="color:#A6ACCD;">((a</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> b) </span><span style="color:#89DDFF;">=&amp;</span><span style="color:#A6ACCD;">gt; a </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> b</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">])) </span><span style="color:#676E95;font-style:italic;">// 10</span></span></code></pre></div><p><a href="https://github.com/niuiic/flow/blob/main/tests/functions/strict/reduce.spec.ts" target="_blank" rel="noreferrer">More examples</a></p><p><strong>Source:</strong> <a href="https://github.com/niuiic/flow/blob/3049742/src/functions/strict/reduce.ts#L42" target="_blank" rel="noreferrer">src/functions/strict/reduce.ts:42</a></p><h2 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th></tr></thead><tbody><tr><td style="text-align:left;">A <em>extends</em> <em>readonly</em> [<code>A</code>]</td></tr></tbody></table><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;">fn</td><td style="text-align:left;"><a href="./../module.internal_/type-aliases/type-alias.AnyFunction.html"><code>AnyFunction</code></a></td></tr><tr><td style="text-align:left;">iterable</td><td style="text-align:left;"><code>A</code></td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>undefined</code></p><blockquote><p><strong>reduce</strong>&lt;A, R&gt;( fn: <a href="./../module.internal_/type-aliases/type-alias.AnyFunction.html"><code>AnyFunction</code></a>, initialRes: <code>R</code>, iterable: <code>A</code>): <code>R</code></p></blockquote><p><strong>Source:</strong> <a href="https://github.com/niuiic/flow/blob/3049742/src/functions/strict/reduce.ts#L43" target="_blank" rel="noreferrer">src/functions/strict/reduce.ts:43</a></p><h2 id="type-parameters-1" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-1" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th></tr></thead><tbody><tr><td style="text-align:left;">A <em>extends</em> <em>readonly</em> [<code>A</code>]</td></tr><tr><td style="text-align:left;">R</td></tr></tbody></table><h2 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;">fn</td><td style="text-align:left;"><a href="./../module.internal_/type-aliases/type-alias.AnyFunction.html"><code>AnyFunction</code></a></td></tr><tr><td style="text-align:left;">initialRes</td><td style="text-align:left;"><code>R</code></td></tr><tr><td style="text-align:left;">iterable</td><td style="text-align:left;"><code>A</code></td></tr></tbody></table><h2 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>R</code></p><blockquote><p><strong>reduce</strong>&lt;A&gt;(fn: <code>Function</code>, iterable: <code>A</code>): <a href="./../module.internal_/type-aliases/type-alias.IterableReturnValue.html"><code>IterableReturnValue</code></a>&lt;<code>A</code>&gt;</p></blockquote><p><strong>Source:</strong> <a href="https://github.com/niuiic/flow/blob/3049742/src/functions/strict/reduce.ts#L46" target="_blank" rel="noreferrer">src/functions/strict/reduce.ts:46</a></p><h2 id="type-parameters-2" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-2" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th></tr></thead><tbody><tr><td style="text-align:left;">A <em>extends</em> <a href="./../module.internal_/type-aliases/type-alias.UniversalIterable.html"><code>UniversalIterable</code></a></td></tr></tbody></table><h2 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;">fn</td><td style="text-align:left;">(prevRes: <a href="./../module.internal_/type-aliases/type-alias.Immutable.html"><code>Immutable</code></a>&lt;<a href="./../module.internal_/type-aliases/type-alias.PrevRes.html"><code>PrevRes</code></a>&lt;<code>A</code>, <a href="./../module.internal_/type-aliases/type-alias.UniversalIterableItem.html"><code>UniversalIterableItem</code></a>&lt;<code>A</code>&gt;&gt;&gt;, args: <a href="./../module.internal_/type-aliases/type-alias.Immutable.html"><code>Immutable</code></a>&lt;<a href="./../module.internal_/type-aliases/type-alias.UniversalIterableItem.html"><code>UniversalIterableItem</code></a>&lt;<code>A</code>&gt;&gt;) =&gt; <a href="./../module.internal_/type-aliases/type-alias.FnReturenValue.html"><code>FnReturenValue</code></a>&lt;<code>A</code>, <code>A</code>&gt;</td></tr><tr><td style="text-align:left;">iterable</td><td style="text-align:left;"><code>A</code></td></tr></tbody></table><h2 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><a href="./../module.internal_/type-aliases/type-alias.IterableReturnValue.html"><code>IterableReturnValue</code></a>&lt;<code>A</code>&gt;</p><blockquote><p><strong>reduce</strong>&lt;A&gt;(fn: <code>Function</code>): <code>Function</code></p></blockquote><p><strong>Source:</strong> <a href="https://github.com/niuiic/flow/blob/3049742/src/functions/strict/reduce.ts#L50" target="_blank" rel="noreferrer">src/functions/strict/reduce.ts:50</a></p><h2 id="type-parameters-3" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-3" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th></tr></thead><tbody><tr><td style="text-align:left;">A <em>extends</em> <a href="./../module.internal_/type-aliases/type-alias.UniversalIterable.html"><code>UniversalIterable</code></a></td></tr></tbody></table><h2 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;">fn</td><td style="text-align:left;">(prevRes: <a href="./../module.internal_/type-aliases/type-alias.Immutable.html"><code>Immutable</code></a>&lt;<a href="./../module.internal_/type-aliases/type-alias.PrevRes.html"><code>PrevRes</code></a>&lt;<code>A</code>, <a href="./../module.internal_/type-aliases/type-alias.UniversalIterableItem.html"><code>UniversalIterableItem</code></a>&lt;<code>A</code>&gt;&gt;&gt;, args: <a href="./../module.internal_/type-aliases/type-alias.Immutable.html"><code>Immutable</code></a>&lt;<a href="./../module.internal_/type-aliases/type-alias.UniversalIterableItem.html"><code>UniversalIterableItem</code></a>&lt;<code>A</code>&gt;&gt;) =&gt; <a href="./../module.internal_/type-aliases/type-alias.FnReturenValue.html"><code>FnReturenValue</code></a>&lt;<code>A</code>, <code>A</code>&gt;</td></tr></tbody></table><h2 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>Function</code></p><blockquote><blockquote><p>(iterable: <code>A</code>): <a href="./../module.internal_/type-aliases/type-alias.IterableReturnValue.html"><code>IterableReturnValue</code></a>&lt;<code>A</code>&gt;</p></blockquote><h3 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;">iterable</td><td style="text-align:left;"><code>A</code></td></tr></tbody></table><h3 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="./../module.internal_/type-aliases/type-alias.IterableReturnValue.html"><code>IterableReturnValue</code></a>&lt;<code>A</code>&gt;</p></blockquote><blockquote><p><strong>reduce</strong>&lt;A, R&gt;(fn: <code>Function</code>, iterable: <code>A</code>): <a href="./../module.internal_/type-aliases/type-alias.IterableReturnValue.html"><code>IterableReturnValue</code></a>&lt;<code>A</code>, <code>R</code>&gt;</p></blockquote><p><strong>Source:</strong> <a href="https://github.com/niuiic/flow/blob/3049742/src/functions/strict/reduce.ts#L55" target="_blank" rel="noreferrer">src/functions/strict/reduce.ts:55</a></p><h2 id="type-parameters-4" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-4" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th></tr></thead><tbody><tr><td style="text-align:left;">A <em>extends</em> <a href="./../module.internal_/type-aliases/type-alias.UniversalIterable.html"><code>UniversalIterable</code></a></td></tr><tr><td style="text-align:left;">R</td></tr></tbody></table><h2 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;">fn</td><td style="text-align:left;">(prevRes: <a href="./../module.internal_/type-aliases/type-alias.Immutable.html"><code>Immutable</code></a>&lt;<a href="./../module.internal_/type-aliases/type-alias.PrevRes.html"><code>PrevRes</code></a>&lt;<code>A</code>, <code>R</code>&gt;&gt;, args: <a href="./../module.internal_/type-aliases/type-alias.Immutable.html"><code>Immutable</code></a>&lt;<a href="./../module.internal_/type-aliases/type-alias.UniversalIterableItem.html"><code>UniversalIterableItem</code></a>&lt;<code>A</code>&gt;&gt;) =&gt; <a href="./../module.internal_/type-aliases/type-alias.FnReturenValue.html"><code>FnReturenValue</code></a>&lt;<code>A</code>, <code>R</code>&gt;</td></tr><tr><td style="text-align:left;">iterable</td><td style="text-align:left;"><code>A</code></td></tr></tbody></table><h2 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><a href="./../module.internal_/type-aliases/type-alias.IterableReturnValue.html"><code>IterableReturnValue</code></a>&lt;<code>A</code>, <code>R</code>&gt;</p><blockquote><p><strong>reduce</strong>&lt;A, R&gt;(fn: <code>Function</code>): <code>Function</code></p></blockquote><p><strong>Source:</strong> <a href="https://github.com/niuiic/flow/blob/3049742/src/functions/strict/reduce.ts#L59" target="_blank" rel="noreferrer">src/functions/strict/reduce.ts:59</a></p><h2 id="type-parameters-5" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-5" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th></tr></thead><tbody><tr><td style="text-align:left;">A <em>extends</em> <a href="./../module.internal_/type-aliases/type-alias.UniversalIterable.html"><code>UniversalIterable</code></a></td></tr><tr><td style="text-align:left;">R</td></tr></tbody></table><h2 id="parameters-6" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-6" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;">fn</td><td style="text-align:left;">(prevRes: <a href="./../module.internal_/type-aliases/type-alias.Immutable.html"><code>Immutable</code></a>&lt;<a href="./../module.internal_/type-aliases/type-alias.PrevRes.html"><code>PrevRes</code></a>&lt;<code>A</code>, <code>R</code>&gt;&gt;, args: <a href="./../module.internal_/type-aliases/type-alias.Immutable.html"><code>Immutable</code></a>&lt;<a href="./../module.internal_/type-aliases/type-alias.UniversalIterableItem.html"><code>UniversalIterableItem</code></a>&lt;<code>A</code>&gt;&gt;) =&gt; <a href="./../module.internal_/type-aliases/type-alias.FnReturenValue.html"><code>FnReturenValue</code></a>&lt;<code>A</code>, <code>R</code>&gt;</td></tr></tbody></table><h2 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>Function</code></p><blockquote><blockquote><p>(iterable: <code>A</code>): <a href="./../module.internal_/type-aliases/type-alias.IterableReturnValue.html"><code>IterableReturnValue</code></a>&lt;<code>A</code>, <code>R</code>&gt;</p></blockquote><h3 id="parameters-7" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-7" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;">iterable</td><td style="text-align:left;"><code>A</code></td></tr></tbody></table><h3 id="returns-7" tabindex="-1">Returns <a class="header-anchor" href="#returns-7" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="./../module.internal_/type-aliases/type-alias.IterableReturnValue.html"><code>IterableReturnValue</code></a>&lt;<code>A</code>, <code>R</code>&gt;</p></blockquote><blockquote><p><strong>reduce</strong>&lt;A, R&gt;( fn: <code>Function</code>, initialRes: <code>R</code>, iterable: <code>A</code>): <a href="./../module.internal_/type-aliases/type-alias.IterableReturnValue.html"><code>IterableReturnValue</code></a>&lt;<code>A</code>, <code>R</code>&gt;</p></blockquote><p><strong>Source:</strong> <a href="https://github.com/niuiic/flow/blob/3049742/src/functions/strict/reduce.ts#L64" target="_blank" rel="noreferrer">src/functions/strict/reduce.ts:64</a></p><h2 id="type-parameters-6" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-6" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th></tr></thead><tbody><tr><td style="text-align:left;">A <em>extends</em> <a href="./../module.internal_/type-aliases/type-alias.UniversalIterable.html"><code>UniversalIterable</code></a></td></tr><tr><td style="text-align:left;">R</td></tr></tbody></table><h2 id="parameters-8" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-8" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;">fn</td><td style="text-align:left;">(prevRes: <a href="./../module.internal_/type-aliases/type-alias.Immutable.html"><code>Immutable</code></a>&lt;<a href="./../module.internal_/type-aliases/type-alias.PrevRes.html"><code>PrevRes</code></a>&lt;<code>A</code>, <code>R</code>&gt;&gt;, args: <a href="./../module.internal_/type-aliases/type-alias.Immutable.html"><code>Immutable</code></a>&lt;<a href="./../module.internal_/type-aliases/type-alias.UniversalIterableItem.html"><code>UniversalIterableItem</code></a>&lt;<code>A</code>&gt;&gt;) =&gt; <a href="./../module.internal_/type-aliases/type-alias.FnReturenValue.html"><code>FnReturenValue</code></a>&lt;<code>A</code>, <code>R</code>&gt;</td></tr><tr><td style="text-align:left;">initialRes</td><td style="text-align:left;"><code>R</code></td></tr><tr><td style="text-align:left;">iterable</td><td style="text-align:left;"><code>A</code></td></tr></tbody></table><h2 id="returns-8" tabindex="-1">Returns <a class="header-anchor" href="#returns-8" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><a href="./../module.internal_/type-aliases/type-alias.IterableReturnValue.html"><code>IterableReturnValue</code></a>&lt;<code>A</code>, <code>R</code>&gt;</p><blockquote><p><strong>reduce</strong>&lt;A, R&gt;(fn: <code>Function</code>, initialRes: <code>R</code>): <code>Function</code></p></blockquote><p><strong>Source:</strong> <a href="https://github.com/niuiic/flow/blob/3049742/src/functions/strict/reduce.ts#L69" target="_blank" rel="noreferrer">src/functions/strict/reduce.ts:69</a></p><h2 id="type-parameters-7" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-7" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th></tr></thead><tbody><tr><td style="text-align:left;">A <em>extends</em> <a href="./../module.internal_/type-aliases/type-alias.UniversalIterable.html"><code>UniversalIterable</code></a></td></tr><tr><td style="text-align:left;">R</td></tr></tbody></table><h2 id="parameters-9" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-9" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;">fn</td><td style="text-align:left;">(prevRes: <a href="./../module.internal_/type-aliases/type-alias.Immutable.html"><code>Immutable</code></a>&lt;<a href="./../module.internal_/type-aliases/type-alias.PrevRes.html"><code>PrevRes</code></a>&lt;<code>A</code>, <code>R</code>&gt;&gt;, args: <a href="./../module.internal_/type-aliases/type-alias.Immutable.html"><code>Immutable</code></a>&lt;<a href="./../module.internal_/type-aliases/type-alias.UniversalIterableItem.html"><code>UniversalIterableItem</code></a>&lt;<code>A</code>&gt;&gt;) =&gt; <a href="./../module.internal_/type-aliases/type-alias.FnReturenValue.html"><code>FnReturenValue</code></a>&lt;<code>A</code>, <code>R</code>&gt;</td></tr><tr><td style="text-align:left;">initialRes</td><td style="text-align:left;"><code>R</code></td></tr></tbody></table><h2 id="returns-9" tabindex="-1">Returns <a class="header-anchor" href="#returns-9" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>Function</code></p><blockquote><blockquote><p>(iterable: <code>A</code>): <a href="./../module.internal_/type-aliases/type-alias.IterableReturnValue.html"><code>IterableReturnValue</code></a>&lt;<code>A</code>, <code>R</code>&gt;</p></blockquote><h3 id="parameters-10" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-10" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;">iterable</td><td style="text-align:left;"><code>A</code></td></tr></tbody></table><h3 id="returns-10" tabindex="-1">Returns <a class="header-anchor" href="#returns-10" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="./../module.internal_/type-aliases/type-alias.IterableReturnValue.html"><code>IterableReturnValue</code></a>&lt;<code>A</code>, <code>R</code>&gt;</p></blockquote>',73),s=[o];function d(n,c,i,u,h,p){return t(),a("div",null,s)}const b=e(r,[["render",d]]);export{y as __pageData,b as default};
