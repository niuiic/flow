import{_ as e,o as t,c as a,Q as l}from"./chunks/framework.ed6abfc6.js";const f=JSON.parse('{"title":"Type alias: ResultReturnValue<T>","description":"","frontmatter":{},"headers":[],"relativePath":"api/types/type-aliases/type-alias.ResultReturnValue.md","filePath":"api/types/type-aliases/type-alias.ResultReturnValue.md","lastUpdated":null}'),s={name:"api/types/type-aliases/type-alias.ResultReturnValue.md"},o=l('<h1 id="type-alias-resultreturnvalue-t" tabindex="-1">Type alias: ResultReturnValue<code>&lt;T&gt;</code> <a class="header-anchor" href="#type-alias-resultreturnvalue-t" aria-label="Permalink to &quot;Type alias: ResultReturnValue`&lt;T&gt;`&quot;">​</a></h1><blockquote><p><strong>ResultReturnValue</strong>: &lt;<code>T</code>&gt; [<code>T</code>] <em>extends</em> [<code>Promise</code>&lt; <a href="./../../flow/classes/class.Result.html"><code>Result</code></a>&lt; <code>Promise</code>&lt; infer R &gt; &gt; &gt;] ? <a href="./type-alias.MaybePromise.html"><code>MaybePromise</code></a>&lt; <a href="./../../flow/classes/class.Result.html"><code>Result</code></a>&lt; <a href="./../internal_/type-aliases/type-alias.Awaited.html"><code>Awaited</code></a>&lt; <code>R</code> &gt; &gt; &gt; : [<code>T</code>] <em>extends</em> [<code>Promise</code>&lt; <a href="./../../flow/classes/class.Result.html"><code>Result</code></a>&lt; infer R &gt; &gt;] ? <a href="./type-alias.MaybePromise.html"><code>MaybePromise</code></a>&lt; <a href="./../../flow/classes/class.Result.html"><code>Result</code></a>&lt; <code>R</code> &gt; &gt; : [<code>T</code>] <em>extends</em> [<a href="./../../flow/classes/class.Result.html"><code>Result</code></a>&lt; <code>Promise</code>&lt; infer R &gt; &gt;] ? <a href="./type-alias.MaybePromise.html"><code>MaybePromise</code></a>&lt; <a href="./../../flow/classes/class.Result.html"><code>Result</code></a>&lt; <a href="./../internal_/type-aliases/type-alias.Awaited.html"><code>Awaited</code></a>&lt; <code>R</code> &gt; &gt; &gt; : <code>T</code></p></blockquote><h2 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code> <em>extends</em> <a href="./type-alias.MaybePromise.html"><code>MaybePromise</code></a>&lt; <a href="./../../flow/classes/class.Result.html"><code>Result</code></a>&lt; <code>unknown</code> &gt; &gt;</td></tr></tbody></table><h2 id="defined-in" tabindex="-1">Defined In <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined In&quot;">​</a></h2><p><a href="https://github.com/niuiic/fx-flow/blob/e9a2e2f/packages/core/src/types/result.ts#L4" target="_blank" rel="noreferrer">packages/core/src/types/result.ts:4</a></p>',6),r=[o];function c(d,i,n,u,p,h){return t(),a("div",null,r)}const y=e(s,[["render",c]]);export{f as __pageData,y as default};
