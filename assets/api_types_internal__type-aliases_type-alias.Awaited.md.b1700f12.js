import{_ as e,o as t,c as a,X as o}from"./chunks/framework.6e839c56.js";const y=JSON.parse('{"title":"Type alias: Awaited<T>","description":"","frontmatter":{},"headers":[],"relativePath":"api/types/internal_/type-aliases/type-alias.Awaited.md","filePath":"api/types/internal_/type-aliases/type-alias.Awaited.md","lastUpdated":null}'),d={name:"api/types/internal_/type-aliases/type-alias.Awaited.md"},r=o('<h1 id="type-alias-awaited-t" tabindex="-1">Type alias: Awaited<code>&lt;T&gt;</code> <a class="header-anchor" href="#type-alias-awaited-t" aria-label="Permalink to &quot;Type alias: Awaited`&lt;T&gt;`&quot;">​</a></h1><blockquote><p><strong>Awaited</strong>: &lt;<code>T</code>&gt; <code>T</code> <em>extends</em> <code>null</code> | <code>undefined</code> ? <code>T</code> : <code>T</code> <em>extends</em> <code>object</code> &amp; {<code>then</code>: ;} ? <code>F</code> <em>extends</em> (<code>value</code>, ...<code>args</code>) =&gt; <code>any</code> ? <a href="./type-alias.Awaited.html"><code>Awaited</code></a>&lt; <code>V</code> &gt; : <code>never</code> : <code>T</code></p></blockquote><p>Recursively unwraps the &quot;awaited type&quot; of a type. Non-promise &quot;thenables&quot; should resolve to <code>never</code>. This emulates the behavior of <code>await</code>.</p><h2 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h2 id="defined-in" tabindex="-1">Defined In <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined In&quot;">​</a></h2><p>node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts:1555</p><hr><p>Generated using <a href="https://typedoc.org/" target="_blank" rel="noreferrer">TypeDoc</a> and <a href="https://www.npmjs.com/package/typedoc-plugin-markdown" target="_blank" rel="noreferrer">typedoc-plugin-markdown</a></p>',9),i=[r];function c(s,n,l,p,h,_){return t(),a("div",null,i)}const u=e(d,[["render",c]]);export{y as __pageData,u as default};
