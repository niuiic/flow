import{_ as e,o as t,c as a,Q as o}from"./chunks/framework.1baa841b.js";const y=JSON.parse('{"title":"Type alias: Include<A, B>","description":"","frontmatter":{},"headers":[],"relativePath":"api/types/type-aliases/Include.md","filePath":"api/types/type-aliases/Include.md","lastUpdated":null}'),c={name:"api/types/type-aliases/Include.md"},r=o('<p><a href="./../../modules.html">fx-flow</a> / <a href="./../">types</a> / Include</p><h1 id="type-alias-include-a-b" tabindex="-1">Type alias: Include<code>&lt;A, B&gt;</code> <a class="header-anchor" href="#type-alias-include-a-b" aria-label="Permalink to &quot;Type alias: Include`&lt;A, B&gt;`&quot;">​</a></h1><blockquote><p><strong>Include</strong>&lt;<code>A</code>, <code>B</code>&gt;: <code>A</code> extends <code>B</code> ? <code>A</code> : <code>never</code></p></blockquote><h2 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th></tr></thead><tbody><tr><td style="text-align:left;"><code>A</code></td></tr><tr><td style="text-align:left;"><code>B</code></td></tr></tbody></table><h2 id="source" tabindex="-1">Source <a class="header-anchor" href="#source" aria-label="Permalink to &quot;Source&quot;">​</a></h2><p><a href="https://github.com/niuiic/fx-flow/blob/48c295b/packages/core/src/types/basic.ts#L42" target="_blank" rel="noreferrer">packages/core/src/types/basic.ts:42</a></p>',7),s=[r];function l(d,n,i,p,u,h){return t(),a("div",null,s)}const f=e(c,[["render",l]]);export{y as __pageData,f as default};
