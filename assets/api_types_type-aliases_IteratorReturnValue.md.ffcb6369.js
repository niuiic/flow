import{_ as e,o as t,c as a,Q as r}from"./chunks/framework.1baa841b.js";const b=JSON.parse('{"title":"Type alias: IteratorReturnValue<T, R>","description":"","frontmatter":{},"headers":[],"relativePath":"api/types/type-aliases/IteratorReturnValue.md","filePath":"api/types/type-aliases/IteratorReturnValue.md","lastUpdated":null}'),l={name:"api/types/type-aliases/IteratorReturnValue.md"},o=r('<p><a href="./../../modules.html">fx-flow</a> / <a href="./../">types</a> / IteratorReturnValue</p><h1 id="type-alias-iteratorreturnvalue-t-r" tabindex="-1">Type alias: IteratorReturnValue<code>&lt;T, R&gt;</code> <a class="header-anchor" href="#type-alias-iteratorreturnvalue-t-r" aria-label="Permalink to &quot;Type alias: IteratorReturnValue`&lt;T, R&gt;`&quot;">​</a></h1><blockquote><p><strong>IteratorReturnValue</strong>&lt;<code>T</code>, <code>R</code>&gt;: <code>T</code> extends <a href="./../&lt;internal&gt;/interfaces/Iterable.html"><code>Iterable</code></a>&lt;<code>unknown</code>&gt; ? <a href="./../&lt;internal&gt;/interfaces/IterableIterator.html"><code>IterableIterator</code></a>&lt;<code>R</code>&gt; : <code>T</code> extends <a href="./../&lt;internal&gt;/interfaces/AsyncIterable.html"><code>AsyncIterable</code></a>&lt;<code>unknown</code>&gt; ? <a href="./../&lt;internal&gt;/interfaces/AsyncIterableIterator.html"><code>AsyncIterableIterator</code></a>&lt;<a href="./../&lt;internal&gt;/type-aliases/Awaited.html"><code>Awaited</code></a>&lt;<code>R</code>&gt;&gt; : <code>never</code></p></blockquote><p>T is async(AsyncIterable) ? AsyncIterableIterator&lt;Awaited<code>&lt;R&gt;</code> &gt; : IterableIterator&lt;R&gt;</p><h2 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Default</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code> extends <a href="./UniversalIterable.html"><code>UniversalIterable</code></a></td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;"><code>R</code></td><td style="text-align:left;"><a href="./UniversalIterableItem.html"><code>UniversalIterableItem</code></a>&lt;<code>T</code>&gt;</td></tr></tbody></table><h2 id="source" tabindex="-1">Source <a class="header-anchor" href="#source" aria-label="Permalink to &quot;Source&quot;">​</a></h2><p><a href="https://github.com/niuiic/fx-flow/blob/bd90ff9/packages/core/src/types/iterable.ts#L32" target="_blank" rel="noreferrer">packages/core/src/types/iterable.ts:32</a></p>',8),c=[o];function s(d,n,i,p,h,u){return t(),a("div",null,c)}const y=e(l,[["render",s]]);export{b as __pageData,y as default};
