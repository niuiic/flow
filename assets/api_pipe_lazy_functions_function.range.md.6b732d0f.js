import{_ as e,o as t,c as a,X as r}from"./chunks/framework.6e839c56.js";const u=JSON.parse('{"title":"Function: range","description":"","frontmatter":{},"headers":[],"relativePath":"api/pipe_lazy/functions/function.range.md","filePath":"api/pipe_lazy/functions/function.range.md","lastUpdated":null}'),n={name:"api/pipe_lazy/functions/function.range.md"},o=r(`<h1 id="function-range" tabindex="-1">Function: range <a class="header-anchor" href="#function-range" aria-label="Permalink to &quot;Function: range&quot;">​</a></h1><blockquote><p><strong>range</strong>(<code>length</code>): <a href="./../../types/internal_/interfaces/interface.IterableIterator.html"><code>IterableIterator</code></a>&lt; <code>number</code> &gt;</p></blockquote><p>Retures IterableIterator of numbers progressing from <code>start</code> to <code>end</code>(not included).</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>length</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><a href="./../../types/internal_/interfaces/interface.IterableIterator.html"><code>IterableIterator</code></a>&lt; <code>number</code> &gt;</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> (</span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> v </span><span style="color:#89DDFF;">of</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">range</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">v</span><span style="color:#F07178;">) </span><span style="color:#676E95;font-style:italic;">// 0, 1, 2, 3</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p><a href="https://github.com/niuiic/flow/blob/main/tests/pipe/lazy/range.spec.ts" target="_blank" rel="noreferrer">More examples</a></p><h2 id="defined-in" tabindex="-1">Defined In <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined In&quot;">​</a></h2><p><a href="https://github.com/niuiic/flow/blob/180e2b6/src/pipe/lazy/range.ts#L13" target="_blank" rel="noreferrer">src/pipe/lazy/range.ts:13</a></p><blockquote><p><strong>range</strong>(<code>start</code>, <code>end</code>): <a href="./../../types/internal_/interfaces/interface.IterableIterator.html"><code>IterableIterator</code></a>&lt; <code>number</code> &gt;</p></blockquote><h2 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>start</code></td><td style="text-align:left;"><code>number</code></td></tr><tr><td style="text-align:left;"><code>end</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h2 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><a href="./../../types/internal_/interfaces/interface.IterableIterator.html"><code>IterableIterator</code></a>&lt; <code>number</code> &gt;</p><h2 id="defined-in-1" tabindex="-1">Defined In <a class="header-anchor" href="#defined-in-1" aria-label="Permalink to &quot;Defined In&quot;">​</a></h2><p><a href="https://github.com/niuiic/flow/blob/180e2b6/src/pipe/lazy/range.ts#L15" target="_blank" rel="noreferrer">src/pipe/lazy/range.ts:15</a></p><blockquote><p><strong>range</strong>( <code>start</code>, <code>end</code>, <code>step</code>): <a href="./../../types/internal_/interfaces/interface.IterableIterator.html"><code>IterableIterator</code></a>&lt; <code>number</code> &gt;</p></blockquote><h2 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>start</code></td><td style="text-align:left;"><code>number</code></td></tr><tr><td style="text-align:left;"><code>end</code></td><td style="text-align:left;"><code>number</code></td></tr><tr><td style="text-align:left;"><code>step</code></td><td style="text-align:left;"><code>number</code></td></tr></tbody></table><h2 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><a href="./../../types/internal_/interfaces/interface.IterableIterator.html"><code>IterableIterator</code></a>&lt; <code>number</code> &gt;</p><h2 id="defined-in-2" tabindex="-1">Defined In <a class="header-anchor" href="#defined-in-2" aria-label="Permalink to &quot;Defined In&quot;">​</a></h2><p><a href="https://github.com/niuiic/flow/blob/180e2b6/src/pipe/lazy/range.ts#L17" target="_blank" rel="noreferrer">src/pipe/lazy/range.ts:17</a></p><hr><p>Generated using <a href="https://typedoc.org/" target="_blank" rel="noreferrer">TypeDoc</a> and <a href="https://www.npmjs.com/package/typedoc-plugin-markdown" target="_blank" rel="noreferrer">typedoc-plugin-markdown</a></p>`,28),l=[o];function s(c,d,i,p,h,f){return t(),a("div",null,l)}const g=e(n,[["render",s]]);export{u as __pageData,g as default};
