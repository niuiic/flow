import{_ as e,o as t,c as a,Q as d}from"./chunks/framework.ed6abfc6.js";const y=JSON.parse('{"title":"Type alias: Exclude<T, U>","description":"","frontmatter":{},"headers":[],"relativePath":"api/types/internal_/type-aliases/type-alias.Exclude.md","filePath":"api/types/internal_/type-aliases/type-alias.Exclude.md","lastUpdated":null}'),l={name:"api/types/internal_/type-aliases/type-alias.Exclude.md"},o=d('<h1 id="type-alias-exclude-t-u" tabindex="-1">Type alias: Exclude<code>&lt;T, U&gt;</code> <a class="header-anchor" href="#type-alias-exclude-t-u" aria-label="Permalink to &quot;Type alias: Exclude`&lt;T, U&gt;`&quot;">​</a></h1><blockquote><p><strong>Exclude</strong>: &lt;<code>T</code>, <code>U</code>&gt; <code>T</code> <em>extends</em> <code>U</code> ? <code>never</code> : <code>T</code></p></blockquote><p>Exclude from T those types that are assignable to U</p><h2 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr><tr><td style="text-align:left;"><code>U</code></td></tr></tbody></table><h2 id="defined-in" tabindex="-1">Defined In <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined In&quot;">​</a></h2><p>node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts:1606</p>',7),s=[o];function r(c,i,n,p,_,u){return t(),a("div",null,s)}const m=e(l,[["render",r]]);export{y as __pageData,m as default};
