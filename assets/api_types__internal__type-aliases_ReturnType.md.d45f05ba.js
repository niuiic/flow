import{_ as e,o as t,c as a,Q as r}from"./chunks/framework.1baa841b.js";const _=JSON.parse('{"title":"Type alias: ReturnType<T>","description":"","frontmatter":{},"headers":[],"relativePath":"api/types/<internal>/type-aliases/ReturnType.md","filePath":"api/types/<internal>/type-aliases/ReturnType.md","lastUpdated":null}'),o={name:"api/types/<internal>/type-aliases/ReturnType.md"},s=r('<p><a href="./../../../modules.html">fx-flow</a> / <a href="./../../">types</a> / <a href="./../">&lt;internal&gt;</a> / ReturnType</p><h1 id="type-alias-returntype-t" tabindex="-1">Type alias: ReturnType<code>&lt;T&gt;</code> <a class="header-anchor" href="#type-alias-returntype-t" aria-label="Permalink to &quot;Type alias: ReturnType`&lt;T&gt;`&quot;">​</a></h1><blockquote><p><strong>ReturnType</strong>&lt;<code>T</code>&gt;: <code>T</code> extends (...<code>args</code>) =&gt; infer R ? <code>R</code> : <code>any</code></p></blockquote><p>Obtain the return type of a function type</p><h2 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code> extends (...<code>args</code>) =&gt; <code>any</code></td></tr></tbody></table><h2 id="source" tabindex="-1">Source <a class="header-anchor" href="#source" aria-label="Permalink to &quot;Source&quot;">​</a></h2><p>node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts:1636</p>',8),n=[s];function p(l,d,c,i,y,u){return t(),a("div",null,n)}const T=e(o,[["render",p]]);export{_ as __pageData,T as default};
