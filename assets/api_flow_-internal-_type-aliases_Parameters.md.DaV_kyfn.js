import{_ as e,c as a,o as t,a4 as r}from"./chunks/framework.CGUKru78.js";const u=JSON.parse('{"title":"Type alias: ParametersT","description":"","frontmatter":{},"headers":[],"relativePath":"api/flow/-internal-/type-aliases/Parameters.md","filePath":"api/flow/-internal-/type-aliases/Parameters.md","lastUpdated":null}'),o={name:"api/flow/-internal-/type-aliases/Parameters.md"},s=r('<p><a href="./../../../modules.html">fx-flow</a> / <a href="./../../">flow</a> / <a href="./../">&lt;internal&gt;</a> / Parameters</p><h1 id="type-alias-parameterst" tabindex="-1">Type alias: Parameters&lt;T&gt; <a class="header-anchor" href="#type-alias-parameterst" aria-label="Permalink to &quot;Type alias: Parameters\\&lt;T\\&gt;&quot;">​</a></h1><blockquote><p><strong>Parameters</strong>&lt;<code>T</code>&gt;: <code>T</code> extends (...<code>args</code>) =&gt; <code>any</code> ? <code>P</code> : <code>never</code></p></blockquote><p>Obtain the parameters of a function type in a tuple</p><h2 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><p>• <strong>T</strong> extends (...<code>args</code>) =&gt; <code>any</code></p><h2 id="source" tabindex="-1">Source <a class="header-anchor" href="#source" aria-label="Permalink to &quot;Source&quot;">​</a></h2><p>node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts:1633</p>',8),l=[s];function n(p,c,d,i,m,_){return t(),a("div",null,l)}const f=e(o,[["render",n]]);export{u as __pageData,f as default};
