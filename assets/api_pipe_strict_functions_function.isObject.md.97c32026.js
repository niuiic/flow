import{_ as s,o as e,c as a,Q as t}from"./chunks/framework.ed6abfc6.js";const u=JSON.parse('{"title":"Function: isObject","description":"","frontmatter":{},"headers":[],"relativePath":"api/pipe_strict/functions/function.isObject.md","filePath":"api/pipe_strict/functions/function.isObject.md","lastUpdated":null}'),n={name:"api/pipe_strict/functions/function.isObject.md"},l=t(`<h1 id="function-isobject" tabindex="-1">Function: isObject <a class="header-anchor" href="#function-isobject" aria-label="Permalink to &quot;Function: isObject&quot;">​</a></h1><blockquote><p><strong>isObject</strong>&lt;<code>A</code>&gt;(<code>args</code>): <code>args is Include&lt;A, object&gt;</code></p></blockquote><p>Check whether <code>args</code> is an object.</p><h2 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th></tr></thead><tbody><tr><td style="text-align:left;"><code>A</code></td></tr></tbody></table><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>args</code></td><td style="text-align:left;"><code>A</code></td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>args is Include&lt;A, object&gt;</code></p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">isObject</span><span style="color:#E1E4E8;">({}); </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#B392F0;">isObject</span><span style="color:#E1E4E8;">([</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">]); </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#B392F0;">isObject</span><span style="color:#E1E4E8;">(() </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {}); </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#B392F0;">isObject</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#B392F0;">isObject</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">123</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// false</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">isObject</span><span style="color:#24292E;">({}); </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#6F42C1;">isObject</span><span style="color:#24292E;">([</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">]); </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#6F42C1;">isObject</span><span style="color:#24292E;">(() </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {}); </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#6F42C1;">isObject</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">null</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#6F42C1;">isObject</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">123</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// false</span></span></code></pre></div><p><a href="https://github.com/niuiic/fx-flow/blob/main/packages/test/src/pipe/strict/isObject.spec.ts" target="_blank" rel="noreferrer">More examples</a></p><h2 id="defined-in" tabindex="-1">Defined In <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined In&quot;">​</a></h2><p><a href="https://github.com/niuiic/fx-flow/blob/71f3ebf/packages/core/src/pipe/strict/isObject.ts#L17" target="_blank" rel="noreferrer">packages/core/src/pipe/strict/isObject.ts:17</a></p>`,14),o=[l];function p(c,r,i,d,y,h){return e(),a("div",null,o)}const E=s(n,[["render",p]]);export{u as __pageData,E as default};
