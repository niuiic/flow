import{_ as e,c as t,o as a,a3 as o}from"./chunks/framework.B_D3VkG0.js";const b=JSON.parse('{"title":"Type alias: Immutable&lt;T, Ignore&gt;","description":"","frontmatter":{},"headers":[],"relativePath":"api/types/type-aliases/Immutable.md","filePath":"api/types/type-aliases/Immutable.md","lastUpdated":null}'),c={name:"api/types/type-aliases/Immutable.md"},d=o('<p><a href="./../../modules.html">fx-flow v0.7.0</a> / <a href="./../">types</a> / Immutable</p><h1 id="type-alias-immutable-lt-t-ignore-gt" tabindex="-1">Type alias: Immutable&lt;T, Ignore&gt; <a class="header-anchor" href="#type-alias-immutable-lt-t-ignore-gt" aria-label="Permalink to &quot;Type alias: Immutable&amp;lt;T, Ignore&amp;gt;&quot;">​</a></h1><blockquote><p><strong>Immutable</strong>&lt;<code>T</code>, <code>Ignore</code>&gt;: <code>T</code> <em>extends</em> <code>T</code> ? <code>T</code> <em>extends</em> <a href="./Primitive.html"><code>Primitive</code></a> | <a href="./AnyFunction.html"><code>AnyFunction</code></a> | <code>Ignore</code> ? <code>T</code> : <code>T</code> <em>extends</em> infer U[] ? <a href="./IsTuple.html"><code>IsTuple</code></a>&lt;<code>T</code>&gt; <em>extends</em> <code>true</code> ? <a href="./ImmutableTuple.html"><code>ImmutableTuple</code></a>&lt;<code>T</code>, <code>Ignore</code>&gt; : <a href="./ImmutableArray.html"><code>ImmutableArray</code></a>&lt;<code>U</code>, <code>Ignore</code>&gt; : <code>T</code> <em>extends</em> <code>Map</code>&lt;infer K, infer V&gt; ? <a href="./ImmutableMap.html"><code>ImmutableMap</code></a>&lt;<code>K</code>, <code>V</code>, <code>Ignore</code>&gt; : <code>T</code> <em>extends</em> <code>Set</code>&lt;infer M&gt; ? <a href="./ImmutableSet.html"><code>ImmutableSet</code></a>&lt;<code>M</code>, <code>Ignore</code>&gt; : <a href="./ImmutableObject.html"><code>ImmutableObject</code></a>&lt;<code>T</code>, <code>Ignore</code>&gt; : <code>never</code></p></blockquote><p>Make types to readonly, work recursively</p><h2 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><p>• <strong>T</strong></p><p>• <strong>Ignore</strong> = <code>never</code></p><h2 id="source" tabindex="-1">Source <a class="header-anchor" href="#source" aria-label="Permalink to &quot;Source&quot;">​</a></h2><p><a href="https://github.com/niuiic/fx-flow/blob/e26154efbd7f76d9bcefeae7bec1cceb69f9ef37/packages/core/src/types/immutable.ts#L15" target="_blank" rel="noreferrer">packages/core/src/types/immutable.ts:15</a></p>',9),r=[d];function l(m,s,n,p,i,u){return a(),t("div",null,r)}const g=e(c,[["render",l]]);export{b as __pageData,g as default};
