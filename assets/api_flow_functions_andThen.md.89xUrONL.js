import{_ as e,o as a,c as s,R as t}from"./chunks/framework.YqPgmvU8.js";const f=JSON.parse('{"title":"Function: andThen()","description":"","frontmatter":{},"headers":[],"relativePath":"api/flow/functions/andThen.md","filePath":"api/flow/functions/andThen.md","lastUpdated":null}'),n={name:"api/flow/functions/andThen.md"},r=t(`<p><a href="./../../modules.html">fx-flow</a> / <a href="./../">flow</a> / andThen</p><h1 id="function-andthen" tabindex="-1">Function: andThen() <a class="header-anchor" href="#function-andthen" aria-label="Permalink to &quot;Function: andThen()&quot;">​</a></h1><h2 id="andthen-fn-result" tabindex="-1">andThen(fn, result) <a class="header-anchor" href="#andthen-fn-result" aria-label="Permalink to &quot;andThen(fn, result)&quot;">​</a></h2><blockquote><p><strong>andThen</strong>&lt;<code>A</code>, <code>R</code>&gt;(<code>fn</code>, <code>result</code>): <a href="./../../types/type-aliases/ResultReturnValue.html"><code>ResultReturnValue</code></a>&lt;<code>R</code>&gt;</p></blockquote><p>Call <code>fn</code> if <code>result</code> is success.</p><h3 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h3><p>• <strong>A</strong></p><p>• <strong>R</strong> extends <a href="./../../types/type-aliases/MaybePromise.html"><code>MaybePromise</code></a>&lt;<a href="./../classes/Result.html"><code>Result</code></a>&lt;<code>unknown</code>&gt;&gt;</p><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p>• <strong>fn</strong>: (<code>data</code>) =&gt; <code>R</code></p><p>• <strong>result</strong>: <a href="./../classes/Result.html"><code>Result</code></a>&lt;<code>A</code>&gt;</p><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="./../../types/type-aliases/ResultReturnValue.html"><code>ResultReturnValue</code></a>&lt;<code>R</code>&gt;</p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> userInfo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> andThen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(queryUserInfo, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ok</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(userId))).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unwrap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// with flow</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> userInfo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> flow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ok</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(userId), </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">andThen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(queryUserInfo))).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unwrap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p><a href="https://github.com/niuiic/fx-flow/blob/main/packages/test/src/flow/andThen.spec.ts" target="_blank" rel="noreferrer">More examples</a></p><h3 id="source" tabindex="-1">Source <a class="header-anchor" href="#source" aria-label="Permalink to &quot;Source&quot;">​</a></h3><p><a href="https://github.com/niuiic/fx-flow/blob/28ef58d/packages/core/src/flow/andThen.ts#L18" target="_blank" rel="noreferrer">packages/core/src/flow/andThen.ts:18</a></p><h2 id="andthen-fn" tabindex="-1">andThen(fn) <a class="header-anchor" href="#andthen-fn" aria-label="Permalink to &quot;andThen(fn)&quot;">​</a></h2><blockquote><p><strong>andThen</strong>&lt;<code>A</code>, <code>R</code>&gt;(<code>fn</code>): (<code>result</code>) =&gt; <a href="./../../types/type-aliases/ResultReturnValue.html"><code>ResultReturnValue</code></a>&lt;<code>R</code>&gt;</p></blockquote><h3 id="type-parameters-1" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-1" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h3><p>• <strong>A</strong></p><p>• <strong>R</strong> extends <a href="./../../types/type-aliases/MaybePromise.html"><code>MaybePromise</code></a>&lt;<a href="./../classes/Result.html"><code>Result</code></a>&lt;<code>unknown</code>&gt;&gt;</p><h3 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p>• <strong>fn</strong>: (<code>data</code>) =&gt; <code>R</code></p><h3 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><code>Function</code></p><blockquote><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p>• <strong>result</strong>: <a href="./../classes/Result.html"><code>Result</code></a>&lt;<code>A</code>&gt;</p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./../../types/type-aliases/ResultReturnValue.html"><code>ResultReturnValue</code></a>&lt;<code>R</code>&gt;</p></blockquote><h3 id="source-1" tabindex="-1">Source <a class="header-anchor" href="#source-1" aria-label="Permalink to &quot;Source&quot;">​</a></h3><p><a href="https://github.com/niuiic/fx-flow/blob/28ef58d/packages/core/src/flow/andThen.ts#L22" target="_blank" rel="noreferrer">packages/core/src/flow/andThen.ts:22</a></p>`,30),i=[r];function o(l,h,d,c,p,u){return a(),s("div",null,i)}const g=e(n,[["render",o]]);export{f as __pageData,g as default};
