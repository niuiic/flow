import{_ as e,c as a,o as t,R as s}from"./chunks/framework.YlTiAyro.js";const _=JSON.parse('{"title":"Type alias: IsTuple<T>","description":"","frontmatter":{},"headers":[],"relativePath":"api/types/type-aliases/IsTuple.md","filePath":"api/types/type-aliases/IsTuple.md","lastUpdated":null}'),o={name:"api/types/type-aliases/IsTuple.md"},r=s('<p><a href="./../../modules.html">fx-flow</a> / <a href="./../">types</a> / IsTuple</p><h1 id="type-alias-istuple-t" tabindex="-1">Type alias: IsTuple&lt;T&gt; <a class="header-anchor" href="#type-alias-istuple-t" aria-label="Permalink to &quot;Type alias: IsTuple\\&lt;T\\&gt;&quot;">​</a></h1><blockquote><p><strong>IsTuple</strong>&lt;<code>T</code>&gt;: [<code>T</code>] extends [<code>never</code>] ? <code>false</code> : [<code>T</code>] extends [<code>any</code>[]] ? <code>number</code> extends <code>T</code>[<code>&quot;length&quot;</code>] ? <code>false</code> : <code>true</code> : <code>false</code></p></blockquote><h2 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><p>• <strong>T</strong></p><h2 id="source" tabindex="-1">Source <a class="header-anchor" href="#source" aria-label="Permalink to &quot;Source&quot;">​</a></h2><p><a href="https://github.com/niuiic/fx-flow/blob/3d7d1b6/packages/core/src/types/basic.ts#L13" target="_blank" rel="noreferrer">packages/core/src/types/basic.ts:13</a></p>',7),c=[r];function l(p,d,i,n,u,h){return t(),a("div",null,c)}const f=e(o,[["render",l]]);export{_ as __pageData,f as default};
