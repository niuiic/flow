import{_ as t,o as e,c as a,X as r}from"./chunks/framework.6e839c56.js";const m=JSON.parse('{"title":"Type alias: Extract<T, U>","description":"","frontmatter":{},"headers":[],"relativePath":"api/types/internal_/type-aliases/type-alias.Extract.md","filePath":"api/types/internal_/type-aliases/type-alias.Extract.md","lastUpdated":null}'),o={name:"api/types/internal_/type-aliases/type-alias.Extract.md"},s=r('<h1 id="type-alias-extract-t-u" tabindex="-1">Type alias: Extract<code>&lt;T, U&gt;</code> <a class="header-anchor" href="#type-alias-extract-t-u" aria-label="Permalink to &quot;Type alias: Extract`&lt;T, U&gt;`&quot;">​</a></h1><blockquote><p><strong>Extract</strong>: &lt;<code>T</code>, <code>U</code>&gt; <code>T</code> <em>extends</em> <code>U</code> ? <code>T</code> : <code>never</code></p></blockquote><p>Extract from T those types that are assignable to U</p><h2 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr><tr><td style="text-align:left;"><code>U</code></td></tr></tbody></table><h2 id="source" tabindex="-1">Source <a class="header-anchor" href="#source" aria-label="Permalink to &quot;Source&quot;">​</a></h2><p>node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts:1611</p>',7),c=[s];function l(d,i,p,n,_,h){return e(),a("div",null,c)}const u=t(o,[["render",l]]);export{m as __pageData,u as default};
