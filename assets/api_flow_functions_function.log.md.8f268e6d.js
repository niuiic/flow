import{_ as e,o as t,c as a,Q as l}from"./chunks/framework.ed6abfc6.js";const y=JSON.parse('{"title":"Function: log","description":"","frontmatter":{},"headers":[],"relativePath":"api/flow/functions/function.log.md","filePath":"api/flow/functions/function.log.md","lastUpdated":null}'),o={name:"api/flow/functions/function.log.md"},s=l('<h1 id="function-log" tabindex="-1">Function: log <a class="header-anchor" href="#function-log" aria-label="Permalink to &quot;Function: log&quot;">​</a></h1><blockquote><p><strong>log</strong>&lt;<code>A</code>&gt;( <code>method</code>, <code>result</code>, <code>modifier</code>): <a href="./../classes/class.Result.html"><code>Result</code></a>&lt; <code>A</code> &gt;</p></blockquote><p>Output result of each step in flow.</p><h2 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th></tr></thead><tbody><tr><td style="text-align:left;"><code>A</code></td></tr></tbody></table><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>method</code></td><td style="text-align:left;"><a href="./../../types/internal_/type-aliases/type-alias.Method.html"><code>Method</code></a></td></tr><tr><td style="text-align:left;"><code>result</code></td><td style="text-align:left;"><a href="./../classes/class.Result.html"><code>Result</code></a>&lt; <code>A</code> &gt;</td></tr><tr><td style="text-align:left;"><code>modifier</code></td><td style="text-align:left;"><a href="./../../types/type-aliases/type-alias.Modifier.html"><code>Modifier</code></a></td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><a href="./../classes/class.Result.html"><code>Result</code></a>&lt; <code>A</code> &gt;</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">flow</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">ok</span><span style="color:#E1E4E8;">(filePath), </span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;INFO&#39;</span><span style="color:#E1E4E8;">), </span><span style="color:#B392F0;">andThen</span><span style="color:#E1E4E8;">(readFileToStr), </span><span style="color:#B392F0;">expect</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;file should exists&#39;</span><span style="color:#E1E4E8;">))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">flow</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">ok</span><span style="color:#24292E;">(filePath), </span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;INFO&#39;</span><span style="color:#24292E;">), </span><span style="color:#6F42C1;">andThen</span><span style="color:#24292E;">(readFileToStr), </span><span style="color:#6F42C1;">expect</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;file should exists&#39;</span><span style="color:#24292E;">))</span></span></code></pre></div><p><a href="https://github.com/niuiic/fx-flow/blob/main/packages/test/src/flow/log.spec.ts" target="_blank" rel="noreferrer">More examples</a></p><h2 id="defined-in" tabindex="-1">Defined In <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined In&quot;">​</a></h2><p><a href="https://github.com/niuiic/fx-flow/blob/d099be6/packages/core/src/flow/log.ts#L17" target="_blank" rel="noreferrer">packages/core/src/flow/log.ts:17</a></p><blockquote><p><strong>log</strong>&lt;<code>A</code>&gt;(<code>method</code>): (<code>result</code>, <code>modifier</code>) =&gt; <a href="./../classes/class.Result.html"><code>Result</code></a>&lt; <code>A</code> &gt;</p></blockquote><h2 id="type-parameters-1" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-1" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th></tr></thead><tbody><tr><td style="text-align:left;"><code>A</code></td></tr></tbody></table><h2 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>method</code></td><td style="text-align:left;"><a href="./../../types/internal_/type-aliases/type-alias.Method.html"><code>Method</code></a></td></tr></tbody></table><h2 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><blockquote><blockquote><p>(<code>result</code>, <code>modifier</code>): <a href="./../classes/class.Result.html"><code>Result</code></a>&lt; <code>A</code> &gt;</p></blockquote><h3 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><table><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>result</code></td><td style="text-align:left;"><a href="./../classes/class.Result.html"><code>Result</code></a>&lt; <code>A</code> &gt;</td></tr><tr><td style="text-align:left;"><code>modifier</code></td><td style="text-align:left;"><a href="./../../types/type-aliases/type-alias.Modifier.html"><code>Modifier</code></a></td></tr></tbody></table><h3 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="./../classes/class.Result.html"><code>Result</code></a>&lt; <code>A</code> &gt;</p></blockquote><h2 id="defined-in-1" tabindex="-1">Defined In <a class="header-anchor" href="#defined-in-1" aria-label="Permalink to &quot;Defined In&quot;">​</a></h2><p><a href="https://github.com/niuiic/fx-flow/blob/d099be6/packages/core/src/flow/log.ts#L18" target="_blank" rel="noreferrer">packages/core/src/flow/log.ts:18</a></p>',23),r=[s];function d(n,c,i,p,h,f){return t(),a("div",null,r)}const m=e(o,[["render",d]]);export{y as __pageData,m as default};
