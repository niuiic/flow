import{_ as e,c as a,o as t,R as r}from"./chunks/framework.YlTiAyro.js";const _=JSON.parse('{"title":"Type alias: IteratorResolve<T>","description":"","frontmatter":{},"headers":[],"relativePath":"api/types/type-aliases/IteratorResolve.md","filePath":"api/types/type-aliases/IteratorResolve.md","lastUpdated":null}'),o={name:"api/types/type-aliases/IteratorResolve.md"},s=r('<p><a href="./../../modules.html">fx-flow</a> / <a href="./../">types</a> / IteratorResolve</p><h1 id="type-alias-iteratorresolve-t" tabindex="-1">Type alias: IteratorResolve&lt;T&gt; <a class="header-anchor" href="#type-alias-iteratorresolve-t" aria-label="Permalink to &quot;Type alias: IteratorResolve\\&lt;T\\&gt;&quot;">​</a></h1><blockquote><p><strong>IteratorResolve</strong>&lt;<code>T</code>&gt;: (<code>args</code>) =&gt; <code>void</code></p></blockquote><h2 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><p>• <strong>T</strong></p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><p>• <strong>args</strong>: <a href="./../../pipe/lazy/-internal-/type-aliases/IteratorResult.html"><code>IteratorResult</code></a>&lt;<code>T</code>&gt;</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>void</code></p><h2 id="source" tabindex="-1">Source <a class="header-anchor" href="#source" aria-label="Permalink to &quot;Source&quot;">​</a></h2><p><a href="https://github.com/niuiic/fx-flow/blob/33d911d/packages/core/src/types/promise.ts#L5" target="_blank" rel="noreferrer">packages/core/src/types/promise.ts:5</a></p>',11),l=[s];function p(i,c,n,d,h,u){return t(),a("div",null,l)}const f=e(o,[["render",p]]);export{_ as __pageData,f as default};
