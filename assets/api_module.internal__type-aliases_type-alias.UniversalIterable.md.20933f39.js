import{_ as e,o as t,c as a,O as r}from"./chunks/framework.7fc6a857.js";const f=JSON.parse('{"title":"UniversalIterable<T>","description":"","frontmatter":{},"headers":[],"relativePath":"api/module.internal_/type-aliases/type-alias.UniversalIterable.md","filePath":"api/module.internal_/type-aliases/type-alias.UniversalIterable.md"}'),l={name:"api/module.internal_/type-aliases/type-alias.UniversalIterable.md"},s=r('<h1 id="universaliterable-t" tabindex="-1">UniversalIterable<code>&lt;T&gt;</code> <a class="header-anchor" href="#universaliterable-t" aria-label="Permalink to &quot;UniversalIterable`&lt;T&gt;`&quot;">​</a></h1><p><strong><code>Type alias</code></strong></p><blockquote><p><strong>UniversalIterable</strong>: &lt;<code>T</code>&gt; <a href="./../interfaces/interface.Iterable.html"><code>Iterable</code></a>&lt;<code>T</code>&gt; | <a href="./../interfaces/interface.AsyncIterable.html"><code>AsyncIterable</code></a>&lt;<code>T</code>&gt;</p></blockquote><p>Iterable or AsyncIterable</p><p><strong>Source:</strong> <a href="https://github.com/niuiic/flow/blob/de99081/src/types/iterable.ts#L23" target="_blank" rel="noreferrer">src/types/iterable.ts:23</a></p><h2 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Default</th></tr></thead><tbody><tr><td style="text-align:left;">T</td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table>',7),o=[s];function n(i,c,d,p,b,_){return t(),a("div",null,o)}const y=e(l,[["render",n]]);export{f as __pageData,y as default};
