import{_ as e,o as a,c as t,R as r}from"./chunks/framework.omYO23xM.js";const u=JSON.parse('{"title":"Type alias: Parameters<T>","description":"","frontmatter":{},"headers":[],"relativePath":"api/types/-internal-/type-aliases/Parameters.md","filePath":"api/types/-internal-/type-aliases/Parameters.md","lastUpdated":null}'),s={name:"api/types/-internal-/type-aliases/Parameters.md"},o=r('<h1 id="type-alias-parameters-t" tabindex="-1">Type alias: Parameters&lt;T&gt; <a class="header-anchor" href="#type-alias-parameters-t" aria-label="Permalink to &quot;Type alias: Parameters\\&lt;T\\&gt;&quot;">​</a></h1><p><a href="./../">&lt;internal&gt;</a>.Parameters</p><blockquote><p><strong>Parameters</strong>&lt;<code>T</code>&gt;: <code>T</code> extends (...<code>args</code>) =&gt; <code>any</code> ? <code>P</code> : <code>never</code></p></blockquote><p>Obtain the parameters of a function type in a tuple</p><h2 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><p>▪ <strong>T</strong> extends (...<code>args</code>) =&gt; <code>any</code></p><h2 id="source" tabindex="-1">Source <a class="header-anchor" href="#source" aria-label="Permalink to &quot;Source&quot;">​</a></h2><p>node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts:1626</p>',8),p=[o];function n(c,d,i,l,m,_){return a(),t("div",null,p)}const y=e(s,[["render",n]]);export{u as __pageData,y as default};
