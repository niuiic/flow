import{_ as e,o as t,c as a,O as l}from"./chunks/framework.7fc6a857.js";const g=JSON.parse('{"title":"ImmutableTuple<T, Ignore>","description":"","frontmatter":{},"headers":[],"relativePath":"api/module.internal_/type-aliases/type-alias.ImmutableTuple.md","filePath":"api/module.internal_/type-aliases/type-alias.ImmutableTuple.md"}'),o={name:"api/module.internal_/type-aliases/type-alias.ImmutableTuple.md"},r=l('<h1 id="immutabletuple-t-ignore" tabindex="-1">ImmutableTuple<code>&lt;T, Ignore&gt;</code> <a class="header-anchor" href="#immutabletuple-t-ignore" aria-label="Permalink to &quot;ImmutableTuple`&lt;T, Ignore&gt;`&quot;">​</a></h1><p><strong><code>Type alias</code></strong></p><blockquote><p><strong>ImmutableTuple</strong>: &lt;<code>T</code>, <code>Ignore</code>&gt; <code>T</code> <em>extends</em> [infer First, ...(infer Rest)] ? [<a href="./type-alias.ImmutableTuple.html"><code>ImmutableTuple</code></a>&lt;<code>Rest</code>, <code>Ignore</code>&gt;] <em>extends</em> [<code>never</code>] ? <em>readonly</em> [<a href="./type-alias.Immutable.html"><code>Immutable</code></a>&lt;<code>First</code>, <code>Ignore</code>&gt;] : <em>readonly</em> [<a href="./type-alias.Immutable.html"><code>Immutable</code></a>&lt;<code>First</code>, <code>Ignore</code>&gt;, ...ImmutableTuple&lt;Rest, Ignore&gt;] : <code>never</code></p></blockquote><p><strong>Source:</strong> <a href="https://github.com/niuiic/flow/blob/32301a6/src/types/immutable.ts#L7" target="_blank" rel="noreferrer">src/types/immutable.ts:7</a></p><h2 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th><th style="text-align:left;">Default</th></tr></thead><tbody><tr><td style="text-align:left;">T</td><td style="text-align:left;">-</td></tr><tr><td style="text-align:left;">Ignore</td><td style="text-align:left;"><code>never</code></td></tr></tbody></table>',6),d=[r];function s(m,n,c,i,p,u){return t(),a("div",null,d)}const _=e(o,[["render",s]]);export{g as __pageData,_ as default};
