import{_ as e,v as t,b as a,R as r}from"./chunks/framework.f9e03a9a.js";const m=JSON.parse('{"title":"Type alias: ReturnType<T>","description":"","frontmatter":{},"headers":[],"relativePath":"api/types/internal_/type-aliases/type-alias.ReturnType.md","filePath":"api/types/internal_/type-aliases/type-alias.ReturnType.md","lastUpdated":null}'),s={name:"api/types/internal_/type-aliases/type-alias.ReturnType.md"},o=r('<h1 id="type-alias-returntype-t" tabindex="-1">Type alias: ReturnType<code>&lt;T&gt;</code> <a class="header-anchor" href="#type-alias-returntype-t" aria-label="Permalink to &quot;Type alias: ReturnType`&lt;T&gt;`&quot;">​</a></h1><blockquote><p><strong>ReturnType</strong>: &lt;<code>T</code>&gt; <code>T</code> <em>extends</em> (...<code>args</code>) =&gt; infer R ? <code>R</code> : <code>any</code></p></blockquote><p>Obtain the return type of a function type</p><h2 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code> <em>extends</em> (...<code>args</code>) =&gt; <code>any</code></td></tr></tbody></table><h2 id="source" tabindex="-1">Source <a class="header-anchor" href="#source" aria-label="Permalink to &quot;Source&quot;">​</a></h2><p>node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts:1636</p>',7),p=[o];function n(d,l,i,c,y,u){return t(),a("div",null,p)}const _=e(s,[["render",n]]);export{m as __pageData,_ as default};
