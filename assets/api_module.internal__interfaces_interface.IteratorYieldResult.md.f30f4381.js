import{_ as e,o as t,c as a,O as r}from"./chunks/framework.7fc6a857.js";const m=JSON.parse('{"title":"IteratorYieldResult<TYield>","description":"","frontmatter":{},"headers":[],"relativePath":"api/module.internal_/interfaces/interface.IteratorYieldResult.md","filePath":"api/module.internal_/interfaces/interface.IteratorYieldResult.md"}'),o={name:"api/module.internal_/interfaces/interface.IteratorYieldResult.md"},l=r('<h1 id="iteratoryieldresult-tyield" tabindex="-1">IteratorYieldResult<code>&lt;TYield&gt;</code> <a class="header-anchor" href="#iteratoryieldresult-tyield" aria-label="Permalink to &quot;IteratorYieldResult`&lt;TYield&gt;`&quot;">​</a></h1><p><strong><code>Interface</code></strong></p><p><strong>Source:</strong> node_modules/.pnpm/typescript@5.0.4/node_modules/typescript/lib/lib.es2015.iterable.d.ts:29</p><h2 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th></tr></thead><tbody><tr><td style="text-align:left;">TYield</td></tr></tbody></table><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="done" tabindex="-1">done <a class="header-anchor" href="#done" aria-label="Permalink to &quot;done&quot;">​</a></h3><blockquote><p><strong>done</strong>?: false</p></blockquote><p><strong>Source:</strong> node_modules/.pnpm/typescript@5.0.4/node_modules/typescript/lib/lib.es2015.iterable.d.ts:30</p><h3 id="value" tabindex="-1">value <a class="header-anchor" href="#value" aria-label="Permalink to &quot;value&quot;">​</a></h3><blockquote><p><strong>value</strong>: <code>TYield</code></p></blockquote><p><strong>Source:</strong> node_modules/.pnpm/typescript@5.0.4/node_modules/typescript/lib/lib.es2015.iterable.d.ts:31</p>',12),i=[l];function s(d,n,p,c,u,_){return t(),a("div",null,i)}const b=e(o,[["render",s]]);export{m as __pageData,b as default};
