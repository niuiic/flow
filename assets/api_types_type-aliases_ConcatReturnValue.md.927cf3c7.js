import{_ as e,o as t,c as a,Q as r}from"./chunks/framework.1baa841b.js";const u=JSON.parse('{"title":"Type alias: ConcatReturnValue<A, B>","description":"","frontmatter":{},"headers":[],"relativePath":"api/types/type-aliases/ConcatReturnValue.md","filePath":"api/types/type-aliases/ConcatReturnValue.md","lastUpdated":null}'),l={name:"api/types/type-aliases/ConcatReturnValue.md"},o=r('<p><a href="./../../modules.html">fx-flow</a> / <a href="./../">types</a> / ConcatReturnValue</p><h1 id="type-alias-concatreturnvalue-a-b" tabindex="-1">Type alias: ConcatReturnValue<code>&lt;A, B&gt;</code> <a class="header-anchor" href="#type-alias-concatreturnvalue-a-b" aria-label="Permalink to &quot;Type alias: ConcatReturnValue`&lt;A, B&gt;`&quot;">​</a></h1><blockquote><p><strong>ConcatReturnValue</strong>&lt;<code>A</code>, <code>B</code>&gt;: <code>A</code> extends <a href="./../&lt;internal&gt;/interfaces/AsyncIterable.html"><code>AsyncIterable</code></a>&lt;<code>unknown</code>&gt; ? <a href="./../&lt;internal&gt;/interfaces/AsyncIterableIterator.html"><code>AsyncIterableIterator</code></a>&lt;<a href="./UniversalIterableItem.html"><code>UniversalIterableItem</code></a>&lt;<code>A</code>&gt; | <a href="./UniversalIterableItem.html"><code>UniversalIterableItem</code></a>&lt;<code>B</code>&gt;&gt; : <code>B</code> extends <a href="./../&lt;internal&gt;/interfaces/AsyncIterable.html"><code>AsyncIterable</code></a>&lt;<code>unknown</code>&gt; ? <a href="./../&lt;internal&gt;/interfaces/AsyncIterableIterator.html"><code>AsyncIterableIterator</code></a>&lt;<a href="./UniversalIterableItem.html"><code>UniversalIterableItem</code></a>&lt;<code>A</code>&gt; | <a href="./UniversalIterableItem.html"><code>UniversalIterableItem</code></a>&lt;<code>B</code>&gt;&gt; : <a href="./../&lt;internal&gt;/interfaces/IterableIterator.html"><code>IterableIterator</code></a>&lt;<a href="./UniversalIterableItem.html"><code>UniversalIterableItem</code></a>&lt;<code>A</code>&gt; | <a href="./UniversalIterableItem.html"><code>UniversalIterableItem</code></a>&lt;<code>B</code>&gt;&gt;</p></blockquote><h2 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Parameter</th></tr></thead><tbody><tr><td style="text-align:left;"><code>A</code> extends <a href="./UniversalIterable.html"><code>UniversalIterable</code></a></td></tr><tr><td style="text-align:left;"><code>B</code> extends <a href="./UniversalIterable.html"><code>UniversalIterable</code></a></td></tr></tbody></table><h2 id="source" tabindex="-1">Source <a class="header-anchor" href="#source" aria-label="Permalink to &quot;Source&quot;">​</a></h2><p><a href="https://github.com/niuiic/fx-flow/blob/e7f1e88/packages/core/src/types/concat.ts#L3" target="_blank" rel="noreferrer">packages/core/src/types/concat.ts:3</a></p>',7),c=[o];function n(s,d,i,h,p,I){return t(),a("div",null,c)}const b=e(l,[["render",n]]);export{u as __pageData,b as default};
