import{_ as e,c as a,o as r,R as t}from"./chunks/framework.YlTiAyro.js";const g=JSON.parse('{"title":"Function: reduce()","description":"","frontmatter":{},"headers":[],"relativePath":"api/pipe/strict/functions/reduce.md","filePath":"api/pipe/strict/functions/reduce.md","lastUpdated":null}'),o={name:"api/pipe/strict/functions/reduce.md"},s=t('<p><a href="./../../../modules.html">fx-flow</a> / <a href="./../">pipe/strict</a> / reduce</p><h1 id="function-reduce" tabindex="-1">Function: reduce() <a class="header-anchor" href="#function-reduce" aria-label="Permalink to &quot;Function: reduce()&quot;">​</a></h1><h2 id="reduce-fn-iterable" tabindex="-1">reduce(fn, iterable) <a class="header-anchor" href="#reduce-fn-iterable" aria-label="Permalink to &quot;reduce(fn, iterable)&quot;">​</a></h2><blockquote><p><strong>reduce</strong>&lt;<code>A</code>&gt;(<code>fn</code>, <code>iterable</code>): <code>undefined</code></p></blockquote><p>&#39;reduce&#39; boils down a list of values into a single value.</p><h3 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h3><p>• <strong>A</strong> extends readonly []</p><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p>• <strong>fn</strong>: <a href="./../../../types/type-aliases/AnyFunction.html"><code>AnyFunction</code></a></p><p>• <strong>iterable</strong>: <code>A</code></p><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><code>undefined</code></p><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">reduce</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b, [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 10</span></span></code></pre></div><p><a href="https://github.com/niuiic/fx-flow/blob/main/packages/test/src/pipe/strict/reduce.spec.ts" target="_blank" rel="noreferrer">More examples</a></p><h3 id="source" tabindex="-1">Source <a class="header-anchor" href="#source" aria-label="Permalink to &quot;Source&quot;">​</a></h3><p><a href="https://github.com/niuiic/fx-flow/blob/a5745ad/packages/core/src/pipe/strict/reduce.ts#L46" target="_blank" rel="noreferrer">packages/core/src/pipe/strict/reduce.ts:46</a></p><h2 id="reduce-fn-initialres-iterable" tabindex="-1">reduce(fn, initialRes, iterable) <a class="header-anchor" href="#reduce-fn-initialres-iterable" aria-label="Permalink to &quot;reduce(fn, initialRes, iterable)&quot;">​</a></h2><blockquote><p><strong>reduce</strong>&lt;<code>A</code>, <code>R</code>&gt;(<code>fn</code>, <code>initialRes</code>, <code>iterable</code>): <code>R</code></p></blockquote><h3 id="type-parameters-1" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-1" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h3><p>• <strong>A</strong> extends readonly []</p><p>• <strong>R</strong></p><h3 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p>• <strong>fn</strong>: <a href="./../../../types/type-aliases/AnyFunction.html"><code>AnyFunction</code></a></p><p>• <strong>initialRes</strong>: <code>R</code></p><p>• <strong>iterable</strong>: <code>A</code></p><h3 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><code>R</code></p><h3 id="source-1" tabindex="-1">Source <a class="header-anchor" href="#source-1" aria-label="Permalink to &quot;Source&quot;">​</a></h3><p><a href="https://github.com/niuiic/fx-flow/blob/a5745ad/packages/core/src/pipe/strict/reduce.ts#L47" target="_blank" rel="noreferrer">packages/core/src/pipe/strict/reduce.ts:47</a></p><h2 id="reduce-fn-iterable-1" tabindex="-1">reduce(fn, iterable) <a class="header-anchor" href="#reduce-fn-iterable-1" aria-label="Permalink to &quot;reduce(fn, iterable)&quot;">​</a></h2><blockquote><p><strong>reduce</strong>&lt;<code>A</code>&gt;(<code>fn</code>, <code>iterable</code>): <a href="./../../../types/type-aliases/IterableReturnValue.html"><code>IterableReturnValue</code></a>&lt;<code>A</code>&gt;</p></blockquote><h3 id="type-parameters-2" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-2" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h3><p>• <strong>A</strong> extends <a href="./../../../types/type-aliases/UniversalIterable.html"><code>UniversalIterable</code></a></p><h3 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p>• <strong>fn</strong>: (<code>prevRes</code>, <code>args</code>) =&gt; <a href="./../-internal-/type-aliases/FnReturenValue.html"><code>FnReturenValue</code></a>&lt;<code>A</code>, <code>A</code>&gt;</p><p>• <strong>iterable</strong>: <code>A</code></p><h3 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="./../../../types/type-aliases/IterableReturnValue.html"><code>IterableReturnValue</code></a>&lt;<code>A</code>&gt;</p><h3 id="source-2" tabindex="-1">Source <a class="header-anchor" href="#source-2" aria-label="Permalink to &quot;Source&quot;">​</a></h3><p><a href="https://github.com/niuiic/fx-flow/blob/a5745ad/packages/core/src/pipe/strict/reduce.ts#L50" target="_blank" rel="noreferrer">packages/core/src/pipe/strict/reduce.ts:50</a></p><h2 id="reduce-fn" tabindex="-1">reduce(fn) <a class="header-anchor" href="#reduce-fn" aria-label="Permalink to &quot;reduce(fn)&quot;">​</a></h2><blockquote><p><strong>reduce</strong>&lt;<code>A</code>&gt;(<code>fn</code>): (<code>iterable</code>) =&gt; <a href="./../../../types/type-aliases/IterableReturnValue.html"><code>IterableReturnValue</code></a>&lt;<code>A</code>&gt;</p></blockquote><h3 id="type-parameters-3" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-3" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h3><p>• <strong>A</strong> extends <a href="./../../../types/type-aliases/UniversalIterable.html"><code>UniversalIterable</code></a></p><h3 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p>• <strong>fn</strong>: (<code>prevRes</code>, <code>args</code>) =&gt; <a href="./../-internal-/type-aliases/FnReturenValue.html"><code>FnReturenValue</code></a>&lt;<code>A</code>, <code>A</code>&gt;</p><h3 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><code>Function</code></p><blockquote><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p>• <strong>iterable</strong>: <code>A</code></p><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./../../../types/type-aliases/IterableReturnValue.html"><code>IterableReturnValue</code></a>&lt;<code>A</code>&gt;</p></blockquote><h3 id="source-3" tabindex="-1">Source <a class="header-anchor" href="#source-3" aria-label="Permalink to &quot;Source&quot;">​</a></h3><p><a href="https://github.com/niuiic/fx-flow/blob/a5745ad/packages/core/src/pipe/strict/reduce.ts#L54" target="_blank" rel="noreferrer">packages/core/src/pipe/strict/reduce.ts:54</a></p><h2 id="reduce-fn-iterable-2" tabindex="-1">reduce(fn, iterable) <a class="header-anchor" href="#reduce-fn-iterable-2" aria-label="Permalink to &quot;reduce(fn, iterable)&quot;">​</a></h2><blockquote><p><strong>reduce</strong>&lt;<code>A</code>, <code>R</code>&gt;(<code>fn</code>, <code>iterable</code>): <a href="./../../../types/type-aliases/IterableReturnValue.html"><code>IterableReturnValue</code></a>&lt;<code>A</code>, <code>R</code>&gt;</p></blockquote><h3 id="type-parameters-4" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-4" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h3><p>• <strong>A</strong> extends <a href="./../../../types/type-aliases/UniversalIterable.html"><code>UniversalIterable</code></a></p><p>• <strong>R</strong></p><h3 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p>• <strong>fn</strong>: (<code>prevRes</code>, <code>args</code>) =&gt; <a href="./../-internal-/type-aliases/FnReturenValue.html"><code>FnReturenValue</code></a>&lt;<code>A</code>, <code>R</code>&gt;</p><p>• <strong>iterable</strong>: <code>A</code></p><h3 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="./../../../types/type-aliases/IterableReturnValue.html"><code>IterableReturnValue</code></a>&lt;<code>A</code>, <code>R</code>&gt;</p><h3 id="source-4" tabindex="-1">Source <a class="header-anchor" href="#source-4" aria-label="Permalink to &quot;Source&quot;">​</a></h3><p><a href="https://github.com/niuiic/fx-flow/blob/a5745ad/packages/core/src/pipe/strict/reduce.ts#L59" target="_blank" rel="noreferrer">packages/core/src/pipe/strict/reduce.ts:59</a></p><h2 id="reduce-fn-1" tabindex="-1">reduce(fn) <a class="header-anchor" href="#reduce-fn-1" aria-label="Permalink to &quot;reduce(fn)&quot;">​</a></h2><blockquote><p><strong>reduce</strong>&lt;<code>A</code>, <code>R</code>&gt;(<code>fn</code>): (<code>iterable</code>) =&gt; <a href="./../../../types/type-aliases/IterableReturnValue.html"><code>IterableReturnValue</code></a>&lt;<code>A</code>, <code>R</code>&gt;</p></blockquote><h3 id="type-parameters-5" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-5" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h3><p>• <strong>A</strong> extends <a href="./../../../types/type-aliases/UniversalIterable.html"><code>UniversalIterable</code></a></p><p>• <strong>R</strong></p><h3 id="parameters-6" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-6" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p>• <strong>fn</strong>: (<code>prevRes</code>, <code>args</code>) =&gt; <a href="./../-internal-/type-aliases/FnReturenValue.html"><code>FnReturenValue</code></a>&lt;<code>A</code>, <code>R</code>&gt;</p><h3 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><code>Function</code></p><blockquote><h4 id="parameters-7" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-7" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p>• <strong>iterable</strong>: <code>A</code></p><h4 id="returns-7" tabindex="-1">Returns <a class="header-anchor" href="#returns-7" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./../../../types/type-aliases/IterableReturnValue.html"><code>IterableReturnValue</code></a>&lt;<code>A</code>, <code>R</code>&gt;</p></blockquote><h3 id="source-5" tabindex="-1">Source <a class="header-anchor" href="#source-5" aria-label="Permalink to &quot;Source&quot;">​</a></h3><p><a href="https://github.com/niuiic/fx-flow/blob/a5745ad/packages/core/src/pipe/strict/reduce.ts#L63" target="_blank" rel="noreferrer">packages/core/src/pipe/strict/reduce.ts:63</a></p><h2 id="reduce-fn-initialres-iterable-1" tabindex="-1">reduce(fn, initialRes, iterable) <a class="header-anchor" href="#reduce-fn-initialres-iterable-1" aria-label="Permalink to &quot;reduce(fn, initialRes, iterable)&quot;">​</a></h2><blockquote><p><strong>reduce</strong>&lt;<code>A</code>, <code>R</code>&gt;(<code>fn</code>, <code>initialRes</code>, <code>iterable</code>): <a href="./../../../types/type-aliases/IterableReturnValue.html"><code>IterableReturnValue</code></a>&lt;<code>A</code>, <code>R</code>&gt;</p></blockquote><h3 id="type-parameters-6" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-6" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h3><p>• <strong>A</strong> extends <a href="./../../../types/type-aliases/UniversalIterable.html"><code>UniversalIterable</code></a></p><p>• <strong>R</strong></p><h3 id="parameters-8" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-8" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p>• <strong>fn</strong>: (<code>prevRes</code>, <code>args</code>) =&gt; <a href="./../-internal-/type-aliases/FnReturenValue.html"><code>FnReturenValue</code></a>&lt;<code>A</code>, <code>R</code>&gt;</p><p>• <strong>initialRes</strong>: <code>R</code></p><p>• <strong>iterable</strong>: <code>A</code></p><h3 id="returns-8" tabindex="-1">Returns <a class="header-anchor" href="#returns-8" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="./../../../types/type-aliases/IterableReturnValue.html"><code>IterableReturnValue</code></a>&lt;<code>A</code>, <code>R</code>&gt;</p><h3 id="source-6" tabindex="-1">Source <a class="header-anchor" href="#source-6" aria-label="Permalink to &quot;Source&quot;">​</a></h3><p><a href="https://github.com/niuiic/fx-flow/blob/a5745ad/packages/core/src/pipe/strict/reduce.ts#L68" target="_blank" rel="noreferrer">packages/core/src/pipe/strict/reduce.ts:68</a></p><h2 id="reduce-fn-initialres" tabindex="-1">reduce(fn, initialRes) <a class="header-anchor" href="#reduce-fn-initialres" aria-label="Permalink to &quot;reduce(fn, initialRes)&quot;">​</a></h2><blockquote><p><strong>reduce</strong>&lt;<code>A</code>, <code>R</code>&gt;(<code>fn</code>, <code>initialRes</code>): (<code>iterable</code>) =&gt; <a href="./../../../types/type-aliases/IterableReturnValue.html"><code>IterableReturnValue</code></a>&lt;<code>A</code>, <code>R</code>&gt;</p></blockquote><h3 id="type-parameters-7" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-7" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h3><p>• <strong>A</strong> extends <a href="./../../../types/type-aliases/UniversalIterable.html"><code>UniversalIterable</code></a></p><p>• <strong>R</strong></p><h3 id="parameters-9" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-9" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p>• <strong>fn</strong>: (<code>prevRes</code>, <code>args</code>) =&gt; <a href="./../-internal-/type-aliases/FnReturenValue.html"><code>FnReturenValue</code></a>&lt;<code>A</code>, <code>R</code>&gt;</p><p>• <strong>initialRes</strong>: <code>R</code></p><h3 id="returns-9" tabindex="-1">Returns <a class="header-anchor" href="#returns-9" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><code>Function</code></p><blockquote><h4 id="parameters-10" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-10" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p>• <strong>iterable</strong>: <code>A</code></p><h4 id="returns-10" tabindex="-1">Returns <a class="header-anchor" href="#returns-10" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./../../../types/type-aliases/IterableReturnValue.html"><code>IterableReturnValue</code></a>&lt;<code>A</code>, <code>R</code>&gt;</p></blockquote><h3 id="source-7" tabindex="-1">Source <a class="header-anchor" href="#source-7" aria-label="Permalink to &quot;Source&quot;">​</a></h3><p><a href="https://github.com/niuiic/fx-flow/blob/a5745ad/packages/core/src/pipe/strict/reduce.ts#L73" target="_blank" rel="noreferrer">packages/core/src/pipe/strict/reduce.ts:73</a></p>',102),c=[s];function i(n,l,d,p,h,u){return r(),a("div",null,c)}const f=e(o,[["render",i]]);export{g as __pageData,f as default};
